const isEsriInternalEnv = () => (
  //#endregion isEsriInternalEnv
  /*
   * `globalThis.` is important here. Some bundlers remove the `typeof process`
   * checks, but don't remove the usages of undefined variables - this can cause
   * runtime error. By adding `globalThis.`, we avoid having `typeof process`
   * check removed by the bundler.
   * This does meant tree-shaking won't happen for the isEsriInternalEnv()
   * check, but this is ok since this check is meant to always be behind the
   * development/test guard.
   * See https://devtopia.esri.com/WebGIS/arcgis-web-components/pull/2087#issuecomment-5152454
   */
  typeof globalThis.process === "object" && !!process.env.ESRI_INTERNAL
);
const safeCall = (callback, thisContext, ...rest) => {
  try {
    return callback?.call(thisContext, ...rest);
  } catch (error) {
    console.error(error, callback);
  }
  return void 0;
};
const safeAsyncCall = async (callback, thisContext, ...rest) => {
  try {
    const result = callback?.call(thisContext, ...rest);
    return await result;
  } catch (error) {
    console.error(error, callback);
  }
  return void 0;
};
export {
  isEsriInternalEnv,
  safeAsyncCall,
  safeCall
};
