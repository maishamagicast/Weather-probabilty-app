import {
  l,
  u
} from "./chunk-SZSNAUXR.js";
import "./chunk-VSSLF37V.js";
import {
  a as a2
} from "./chunk-MUFC275K.js";
import "./chunk-AUL2ONNS.js";
import {
  H,
  K,
  ae,
  pe,
  we
} from "./chunk-HUMAQMLO.js";
import "./chunk-U67644U5.js";
import "./chunk-MX6BY66A.js";
import "./chunk-SMDDQAST.js";
import "./chunk-24S6C5S6.js";
import "./chunk-LRMEAASV.js";
import {
  n
} from "./chunk-AUHP32YH.js";
import {
  a,
  r
} from "./chunk-AY3JR4QM.js";
import "./chunk-SUYBRL4O.js";
import "./chunk-7Y4U2JD3.js";
import "./chunk-GCTSCKPO.js";
import "./chunk-6U4EGJOK.js";
import "./chunk-EMULKSUV.js";
import "./chunk-2CDQ56FJ.js";
import "./chunk-3YHKSRHV.js";
import "./chunk-HH4Q2NN5.js";
import "./chunk-3CFYBBSV.js";
import "./chunk-AACFCXAP.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-7I4TWCTW.js";
import "./chunk-SCMB64VM.js";
import "./chunk-APMQAZ5Z.js";
import "./chunk-LNLFY27J.js";
import "./chunk-P4O4YCLI.js";
import "./chunk-MSSQA3XK.js";
import "./chunk-W7U4L72B.js";
import "./chunk-4KZLIAP7.js";
import "./chunk-62NATJWT.js";
import "./chunk-FOPBVVXE.js";
import "./chunk-RMRI4NYS.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-BLBN3L5Q.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-SRNKPAJX.js";
import "./chunk-MOMLPET6.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-CBXZL53X.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-SMO33YG7.js";
import "./chunk-LCBAL6ER.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-67AKDROO.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-POWGZO3T.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-NJZD7WM5.js";
import "./chunk-CL7VLXUR.js";
import "./chunk-FCX4ZA3Z.js";
import "./chunk-2ZPU5IZX.js";
import "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function f(a3) {
  return async (f2, p2, S) => {
    if (ae(S, 2, 2, f2, p2), null === (S = we(S))[0] && null === S[1]) return false;
    if (K(S[0])) {
      if (H(S[1])) return new l({ parentfeatureset: S[0], relation: a3, relationGeom: S[1] });
      if (null === S[1]) return new u({ parentfeatureset: S[0] });
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (H(S[0])) {
      if (H(S[1])) {
        switch (a3) {
          case "esriSpatialRelEnvelopeIntersects": {
            const e = n(S[0]), t = n(S[1]);
            return null != e && null != t && a2("intersects", [e.toJSON(), t.toJSON()]);
          }
          case "esriSpatialRelIntersects":
            return a2("intersects", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelContains":
            return a2("contains", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelOverlaps":
            return a2("overlaps", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelWithin":
            return a2("within", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelTouches":
            return a2("touches", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelCrosses":
            return a2("crosses", [S[0].toJSON(), S[1].toJSON()]);
        }
        throw new a(f2, r.InvalidParameter, p2);
      }
      if (K(S[1])) return new l({ parentfeatureset: S[1], relation: a3, relationGeom: S[0] });
      if (null === S[1]) return false;
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (null === S[0]) {
      if (K(S[1])) return new u({ parentfeatureset: S[1] });
      if (H(S[1]) || null === S[1]) return false;
    }
    throw new a(f2, r.InvalidParameter, p2);
  };
}
function p(n2) {
  "async" === n2.mode && (n2.functions.intersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelIntersects"));
  }, n2.functions.envelopeintersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelEnvelopeIntersects"));
  }, n2.signatures.push({ name: "envelopeintersects", min: 2, max: 2 }), n2.functions.contains = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelContains"));
  }, n2.functions.overlaps = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelOverlaps"));
  }, n2.functions.within = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelWithin"));
  }, n2.functions.touches = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelTouches"));
  }, n2.functions.crosses = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelCrosses"));
  }, n2.functions.relate = function(u2, f2) {
    return n2.standardFunctionAsync(u2, f2, (async (n3, p2, S) => {
      if (S = we(S), ae(S, 3, 3, u2, f2), H(S[0]) && H(S[1])) return a2("relate", [S[0].toJSON(), S[1].toJSON(), pe(S[2])]);
      if (H(S[0]) && null === S[1]) return false;
      if (H(S[1]) && null === S[0]) return false;
      if (K(S[0]) && null === S[1]) return new u({ parentfeatureset: S[0] });
      if (K(S[1]) && null === S[0]) return new u({ parentfeatureset: S[1] });
      if (K(S[0]) && H(S[1])) return S[0].relate(S[1], pe(S[2]));
      if (K(S[1]) && H(S[0])) return S[1].relate(S[0], pe(S[2]));
      if (null === S[0] && null === S[1]) return false;
      throw new a(u2, r.InvalidParameter, f2);
    }));
  });
}
export {
  p as registerFunctions
};
//# sourceMappingURL=featuresetgeom-SWMKCV2H.js.map
