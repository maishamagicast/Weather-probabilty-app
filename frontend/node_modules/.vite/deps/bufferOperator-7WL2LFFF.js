import {
  f,
  l
} from "./chunk-XUR4XZXR.js";
import "./chunk-72DKBYJW.js";
import "./chunk-SWGR3FVK.js";
import "./chunk-FNBJ5BEE.js";
import {
  Be,
  Ie,
  Me,
  Pe
} from "./chunk-T2YIGHGA.js";
import "./chunk-WDDL5MIW.js";
import "./chunk-XKWGLDG7.js";
import "./chunk-VPFF3G33.js";
import "./chunk-RJMWK2VP.js";
import "./chunk-ZXYXNXJE.js";
import "./chunk-I7OUBN5N.js";
import {
  N2 as N
} from "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-2AYGXVZI.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import {
  L
} from "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/geometry/operators/json/bufferOperator.js
function a(t, o, m = {}) {
  const { unit: a2 } = m, c2 = Ie(t);
  a2 && c2 && (o = N(o, a2, c2));
  const u = Pe(t), p = u.getSpatialReference();
  return Me(f(u.getGeometry(), p, o), p);
}
function c(e, i, a2 = {}) {
  let { maxDeviation: c2 = NaN, maxVerticesInFullCircle: u = 96, union: p = false, unit: f2 } = a2;
  const l2 = Ie(e);
  f2 && l2 && (i = i.map(((t) => N(t, f2, l2))), c2 && (c2 = N(c2, f2, l2)));
  const [j, x] = Be(e);
  return l(j, x, i, c2, u, p).map(((t) => Me(t, x))).filter(L);
}
export {
  a as execute,
  c as executeMany
};
//# sourceMappingURL=bufferOperator-7WL2LFFF.js.map
