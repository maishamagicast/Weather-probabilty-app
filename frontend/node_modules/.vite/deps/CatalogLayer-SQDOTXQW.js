import {
  G
} from "./chunk-KML2DKI7.js";
import "./chunk-DYJFNOYL.js";
import "./chunk-N36OHHH6.js";
import "./chunk-NQ2IXS5Y.js";
import "./chunk-UN7Z22YY.js";
import {
  V as V3,
  k as k2
} from "./chunk-AXEQLPYK.js";
import {
  c
} from "./chunk-MWIJEAM3.js";
import "./chunk-BGSPX4Z3.js";
import "./chunk-WBA6DQSU.js";
import {
  a as a4
} from "./chunk-BB6EK2RQ.js";
import {
  s as s3
} from "./chunk-R3HU2OBM.js";
import "./chunk-5ZJG2W6X.js";
import "./chunk-7JSCPQTK.js";
import "./chunk-EYECC3PG.js";
import {
  n as n3
} from "./chunk-LUPQ25XG.js";
import {
  i
} from "./chunk-3GQTEESV.js";
import {
  t as t2
} from "./chunk-UBVWE2LK.js";
import {
  l as l2
} from "./chunk-32DGBWKL.js";
import "./chunk-DJRZXLB2.js";
import "./chunk-3ESJRJZD.js";
import {
  p as p2
} from "./chunk-L6GG77AZ.js";
import {
  n as n2
} from "./chunk-XOKYRVJ5.js";
import {
  A,
  l as l3
} from "./chunk-D2DRG2DH.js";
import {
  e as e4
} from "./chunk-HOVLU5XA.js";
import {
  c as c2
} from "./chunk-2DCDAX3U.js";
import "./chunk-EZ5REY53.js";
import {
  p as p3
} from "./chunk-3HYSKSYM.js";
import {
  f
} from "./chunk-EWP4DLQF.js";
import {
  p
} from "./chunk-CHGKJUJ3.js";
import "./chunk-3YBQQHIP.js";
import "./chunk-OJQCHQYS.js";
import {
  t
} from "./chunk-N3W3EVP3.js";
import {
  I as I2,
  b2 as b,
  d,
  j as j2,
  l as l4,
  m as m5,
  p as p4,
  u as u3,
  v,
  w
} from "./chunk-ZJXLBTN2.js";
import "./chunk-SIRTOV2N.js";
import {
  m as m4,
  u as u2
} from "./chunk-V7CFMRVF.js";
import "./chunk-LINWZZJL.js";
import "./chunk-YKZMZKSQ.js";
import {
  B,
  H as H2,
  ae,
  oe,
  q as q2
} from "./chunk-QZISYUPA.js";
import "./chunk-HQRWZZNA.js";
import {
  m as m3
} from "./chunk-CKFS2QIU.js";
import "./chunk-PI2R2EZ2.js";
import "./chunk-JLGVQWP5.js";
import "./chunk-LCT65JMM.js";
import "./chunk-IR6JOM7Y.js";
import "./chunk-MK7DDFJN.js";
import {
  j
} from "./chunk-H2PFGMJP.js";
import {
  S
} from "./chunk-OFINLTIW.js";
import "./chunk-TIU3P5HE.js";
import "./chunk-EU5HNJUP.js";
import "./chunk-CJSURDZH.js";
import "./chunk-FFY3IMAS.js";
import "./chunk-VP22BRUV.js";
import "./chunk-Z6FTTTCT.js";
import "./chunk-RPGAK5ZK.js";
import "./chunk-KX3QNWMZ.js";
import "./chunk-HPADPQJ7.js";
import "./chunk-YT2ORY5Z.js";
import "./chunk-2UINVE7X.js";
import "./chunk-AL2RVMAM.js";
import {
  F
} from "./chunk-CLMM4HHK.js";
import "./chunk-PTLGJ4Y6.js";
import "./chunk-KXZAYF3U.js";
import "./chunk-PHSQVJNW.js";
import "./chunk-KFNWBWN4.js";
import "./chunk-K55CXVYD.js";
import "./chunk-G2F62CY5.js";
import "./chunk-Q37ABIVM.js";
import "./chunk-VFMQPCCZ.js";
import "./chunk-63ZT5BWV.js";
import "./chunk-OPQ3FCJ4.js";
import "./chunk-CY6GSCRR.js";
import "./chunk-3ISR2POR.js";
import "./chunk-3JKWT76Y.js";
import "./chunk-LOLNWH3R.js";
import "./chunk-W3BJJE6D.js";
import "./chunk-UZ3YWBWC.js";
import "./chunk-TZZ746IQ.js";
import "./chunk-K5CV62SX.js";
import "./chunk-P7KAQGGQ.js";
import "./chunk-J6CZRLYU.js";
import "./chunk-4QXO2FM6.js";
import "./chunk-2EOHKZLO.js";
import "./chunk-CYQZCOHI.js";
import "./chunk-S7GLMIAQ.js";
import "./chunk-OUR2XGMQ.js";
import "./chunk-YIVJSMJO.js";
import "./chunk-QMUTCCDX.js";
import "./chunk-24S6C5S6.js";
import "./chunk-7Y4U2JD3.js";
import "./chunk-GCTSCKPO.js";
import "./chunk-6U4EGJOK.js";
import "./chunk-W7U4L72B.js";
import {
  g
} from "./chunk-C4HV45QS.js";
import "./chunk-FB53UFVR.js";
import "./chunk-UICDKBDP.js";
import "./chunk-3M6ALZOH.js";
import "./chunk-QPV4BKBC.js";
import {
  e as e3
} from "./chunk-LQQCPLIT.js";
import "./chunk-4O46EK5T.js";
import "./chunk-UO2UKPG5.js";
import "./chunk-EMULKSUV.js";
import "./chunk-AY3JR4QM.js";
import "./chunk-UXVQ5YGS.js";
import "./chunk-A2AZM62Y.js";
import "./chunk-K3VYMAVM.js";
import {
  R
} from "./chunk-LQYJLB4P.js";
import "./chunk-D6GGPM6D.js";
import "./chunk-FQY65CBA.js";
import "./chunk-HH4Q2NN5.js";
import "./chunk-IR4HVW2K.js";
import "./chunk-OT2P27SF.js";
import "./chunk-XJOLJK3F.js";
import "./chunk-3CFYBBSV.js";
import "./chunk-ZVNJ2S2Z.js";
import {
  s as s2
} from "./chunk-7OH24VUH.js";
import {
  r as r3
} from "./chunk-P5DG4SNT.js";
import {
  h
} from "./chunk-R25QZWQ7.js";
import "./chunk-BELQIHLO.js";
import "./chunk-BPI4BR4E.js";
import "./chunk-YVMULGDJ.js";
import "./chunk-CJDZN5K5.js";
import "./chunk-N77BULFI.js";
import "./chunk-6TZIEYTZ.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-XRTNDGK2.js";
import "./chunk-A6R2FXH6.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-YAXW2DL6.js";
import {
  k
} from "./chunk-QLKHFYAN.js";
import "./chunk-FV6ZNHFI.js";
import "./chunk-PBKE5BCM.js";
import {
  q
} from "./chunk-FOALQHMM.js";
import "./chunk-7HS3ESHX.js";
import "./chunk-2CS746FZ.js";
import "./chunk-NEI5HAVK.js";
import "./chunk-RCOFAQFP.js";
import "./chunk-CO2J5JPW.js";
import {
  m as m2
} from "./chunk-CHAHOTAY.js";
import "./chunk-RZGBA4KS.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-7I4TWCTW.js";
import {
  g as g2
} from "./chunk-W5UOLFE2.js";
import "./chunk-AZ2S2PYZ.js";
import "./chunk-SCMB64VM.js";
import "./chunk-FOPBVVXE.js";
import "./chunk-INI6MHIQ.js";
import "./chunk-R7YP6EQJ.js";
import "./chunk-QUZZIDFR.js";
import "./chunk-CBCDVQSA.js";
import {
  V as V2
} from "./chunk-74GULGYB.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-RMRI4NYS.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-BLBN3L5Q.js";
import {
  C
} from "./chunk-5EWIWLNU.js";
import "./chunk-TOCH3L2K.js";
import "./chunk-CBXZL53X.js";
import {
  l
} from "./chunk-HYAO4PVV.js";
import "./chunk-SRNKPAJX.js";
import "./chunk-MOMLPET6.js";
import "./chunk-VNQUG2TO.js";
import "./chunk-EULNFFHG.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-SMO33YG7.js";
import "./chunk-LCBAL6ER.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-67AKDROO.js";
import "./chunk-CM3TIXEV.js";
import {
  H
} from "./chunk-2AYGXVZI.js";
import {
  D,
  I,
  V,
  r as r2
} from "./chunk-OUZJZB6I.js";
import "./chunk-WO5FLTVY.js";
import "./chunk-MGA7XBRB.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-4AKMPOG7.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-APMQAZ5Z.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-NJZD7WM5.js";
import "./chunk-CL7VLXUR.js";
import "./chunk-FCX4ZA3Z.js";
import {
  e as e2,
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2 as a3
} from "./chunk-S62CSPIH.js";
import {
  x
} from "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import {
  n,
  u
} from "./chunk-JNYZ3I5R.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  a as a2,
  e
} from "./chunk-N626Y23H.js";
import {
  a,
  s2 as s
} from "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/layers/catalog/CatalogDynamicGroupLayer.js
var v2 = class extends t(p(S(h))) {
  constructor(e5) {
    super(e5), this._layerCache = new e3(20, ((e6) => e6.destroy())), this._oidToReference = new s2(), this._layerToReference = /* @__PURE__ */ new Map(), this.legendEnabled = true, this.layers = new V2(), this.maximumVisibleSublayers = 10, this.opacity = 1, this.parent = null, this.persistenceEnabled = true, this.title = "Layers in view", this.type = "catalog-dynamic-group", this.visible = true;
  }
  initialize() {
    this.addHandles([this.layers.on("after-add", (({ item: e5 }) => {
      e5.parent = this;
    })), this.layers.on("after-remove", (({ item: e5 }) => {
      e5.parent = null;
    })), l((() => this._orderBy), (() => {
      this._updateLayerSortValues(), this._sortAllLayers();
    }))]);
  }
  load(e5) {
    return this.addResolvingPromise(this.parent.load()), Promise.resolve(this);
  }
  destroy() {
    this._layerCache.destroy(), this._oidToReference.clear(), this._layerToReference.clear();
  }
  get _orderBy() {
    return this.parent ? this.parent.orderBy?.find(((e5) => !e5.valueExpression && e5.field)) ?? new n2({ field: this.parent.objectIdField }) : null;
  }
  get _referenceComparator() {
    const e5 = this._orderBy;
    if (!this.parent || !e5) return () => 0;
    const t3 = this.parent.fieldsIndex.get(e5.field), r4 = g(t3?.toJSON().type, "descending" === e5.order), o = g("esriFieldTypeOID", "descending" === e5.order);
    return (e6, t4) => r4(t4.sortValue, e6.sortValue) || o(t4.objectId, e6.objectId);
  }
  get fullExtent() {
    return this.parent?.fullExtent ?? null;
  }
  get updating() {
    return n(this._oidToReference, (({ pending: e5 }) => null != e5));
  }
  acquireLayer(e5) {
    if (this.destroyed) return e();
    const t3 = this._getLayerReference(e5);
    return t3.count++, e((() => {
      t3.count--, t3.count || this._destroyLayerReference(t3);
    }));
  }
  _getLayerReference(e5) {
    const t3 = e5.getObjectId();
    return u(this._oidToReference, t3, (() => {
      const t4 = e5.getObjectId(), r4 = `${t4}`, o = e5.getAttribute(this.parent.itemSourceField), i2 = new b2(e5, t4, o), s4 = this._layerCache.pop(r4);
      return s4 ? (this._addLayer(i2, s4), i2) : (i2.pending = this.parent.createLayerFromFootprint(e5).then(((e6) => {
        i2.count ? this._addLayer(i2, e6) : (this.destroyed || this._layerCache.get(r4) || this._layerCache.put(r4, e6), i2.layer = null);
      })).catch((() => {
      })).finally((() => {
        i2.pending = null;
      })), i2);
    }));
  }
  _destroyLayerReference(e5) {
    e5.layer && (this._layerToReference.delete(e5.layer), this.layers.remove(e5.layer), this.destroyed ? e5.layer.destroy() : this._layerCache.put(`${e5.objectId}`, e5.layer), e5.layer = null), this._oidToReference.delete(e5.objectId);
  }
  _addLayer(e5, t3) {
    e5.layer = t3, t3.persistenceEnabled = false, this._layerToReference.set(t3, e5), this._updateLayerSortValue(e5), this.layers.add(t3), this._sortAllLayers();
  }
  _updateLayerSortValues() {
    for (const e5 of this._layerToReference.values()) this._updateLayerSortValue(e5);
  }
  _updateLayerSortValue(e5) {
    this._orderBy && (e5.sortValue = e5.footprint.getAttribute(this._orderBy.field));
  }
  _sortAllLayers() {
    this.layers.sort(((e5, t3) => this._referenceComparator(this._layerToReference.get(e5), this._layerToReference.get(t3))));
  }
};
r([m()], v2.prototype, "_orderBy", null), r([m({ readOnly: true })], v2.prototype, "_referenceComparator", null), r([m(d)], v2.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"], json: { write: true } })], v2.prototype, "listMode", void 0), r([m({ readOnly: true })], v2.prototype, "fullExtent", null), r([m({ type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } }, write: { ignoreOrigin: true, isRequired: true } } })], v2.prototype, "id", void 0), r([m({ readOnly: true })], v2.prototype, "layers", void 0), r([m({ type: x, range: { min: 0, max: 50 }, json: { write: true, default: 10 } })], v2.prototype, "maximumVisibleSublayers", void 0), r([m(w)], v2.prototype, "opacity", void 0), r([m({ clonable: false })], v2.prototype, "parent", void 0), r([m({ type: String, nonNullable: true, json: { write: { ignoreOrigin: true, isRequired: true } } })], v2.prototype, "title", void 0), r([m({ json: { read: false } })], v2.prototype, "type", void 0), r([m({ readOnly: true })], v2.prototype, "updating", null), r([m({ type: Boolean, json: { name: "visibility", write: true } })], v2.prototype, "visible", void 0), v2 = r([a3("esri.layers.catalog.CatalogDynamicGroupLayer")], v2);
var b2 = class {
  constructor(e5, t3, r4) {
    this.footprint = e5, this.objectId = t3, this.itemSource = r4, this.count = 0, this.layer = null, this.sortValue = void 0, this._pending = r3(null);
  }
  get pending() {
    return this._pending.value;
  }
  set pending(e5) {
    this._pending.value = e5;
  }
};

// node_modules/@arcgis/core/layers/catalog/CatalogFootprintLayer.js
function S2() {
  const e5 = new m2({ style: "solid", color: [0, 0, 0, 0], outline: { style: "solid", color: [96, 96, 96, 0.75], width: 0.75 } });
  return new m3({ symbol: e5 });
}
var P = class extends t(c(p(S(h)))) {
  constructor(e5) {
    super(e5), this.attributeTableTemplate = null, this.charts = null, this.editingEnabled = true, this.elevationInfo = null, this.formTemplate = null, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxScale = 0, this.minScale = 0, this.opacity = 1, this.parent = null, this.persistenceEnabled = true, this.popupEnabled = true, this.popupTemplate = null, this.title = "Footprints", this.type = "catalog-footprint", this.visible = true;
  }
  load(e5) {
    return this.addResolvingPromise(this._doLoad(e5)), Promise.resolve(this);
  }
  async _doLoad(e5) {
    await this.parent.load(e5), g2(this.renderer, this.fieldsIndex), this.addHandles([this.parent.on("apply-edits", ((e6) => this.emit("apply-edits", e6))), this.parent.on("edits", ((e6) => this.emit("edits", e6))), this.parent.on("refresh", ((e6) => this.emit("refresh", e6)))]);
  }
  get apiKey() {
    return this.parent?.apiKey;
  }
  get capabilities() {
    return this.parent?.capabilities;
  }
  get customParameters() {
    return this.parent?.customParameters;
  }
  get dateFieldsTimeZone() {
    return this.parent?.dateFieldsTimeZone ?? null;
  }
  get datesInUnknownTimezone() {
    return this.parent?.datesInUnknownTimezone ?? false;
  }
  get definitionExpression() {
    return this.parent?.definitionExpression;
  }
  get editingInfo() {
    return this.parent?.editingInfo;
  }
  get effectiveCapabilities() {
    return this.parent?.effectiveCapabilities;
  }
  get createQueryVersion() {
    return this.parent?.createQueryVersion;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get displayField() {
    return this.parent?.displayField;
  }
  get displayFilterEnabled() {
    return this.parent?.displayFilterEnabled ?? true;
  }
  get displayFilterInfo() {
    return this.parent?.displayFilterInfo ?? null;
  }
  get effectiveEditingEnabled() {
    return false;
  }
  get fields() {
    return this.parent?.fields;
  }
  get fieldsIndex() {
    return this.parent?.fieldsIndex;
  }
  get fullExtent() {
    return this.parent?.fullExtent;
  }
  get geometryFieldsInfo() {
    return this.parent?.geometryFieldsInfo;
  }
  get geometryType() {
    return this.parent?.geometryType;
  }
  get globalIdField() {
    return this.parent?.globalIdField;
  }
  get hasM() {
    return this.parent?.hasM ?? false;
  }
  get hasZ() {
    return this.parent?.hasZ ?? false;
  }
  get objectIdField() {
    return this.parent?.objectIdField;
  }
  get orderBy() {
    return this.parent?.orderBy ?? null;
  }
  get outFields() {
    return this.parent?.outFields;
  }
  get parsedUrl() {
    return this.parent?.parsedUrl ?? null;
  }
  get preferredTimeZone() {
    return this.parent?.preferredTimeZone ?? null;
  }
  set renderer(e5) {
    g2(e5, this.fieldsIndex), this._set("renderer", e5);
  }
  get renderer() {
    return this._isOverridden("renderer") ? this._get("renderer") : S2();
  }
  get returnM() {
    return this.parent?.returnM;
  }
  get returnZ() {
    return this.parent?.returnZ;
  }
  get source() {
    return this.parent?.source;
  }
  get timeExtent() {
    return this.parent?.timeExtent;
  }
  get timeInfo() {
    return this.parent?.timeInfo;
  }
  get timeOffset() {
    return this.parent?.timeOffset;
  }
  get typeIdField() {
    return this.parent?.typeIdField;
  }
  get types() {
    return this.parent?.types;
  }
  get useViewTime() {
    return this.parent?.useViewTime ?? true;
  }
  get version() {
    return this.parent?.version;
  }
  async applyEdits(e5, t3) {
    return await this.load(), this.parent.applyEdits(e5, t3);
  }
  createPopupTemplate(e5) {
    const t3 = { fields: this.fields, objectIdField: this.objectIdField, title: this.title };
    return p3(t3, e5);
  }
  createQuery() {
    return this.parent?.createQuery();
  }
  getField(e5) {
    return this.parent?.getField(e5);
  }
  getFieldDomain(e5, t3) {
    return this.parent?.getFieldDomain(e5, t3);
  }
  async queryExtent(e5, t3) {
    return await this.load(), this.parent.queryExtent(e5, t3);
  }
  async queryFeatures(e5, t3) {
    return await this.load(), this.parent.queryFeatures(e5, t3);
  }
  async queryFeatureCount(e5, t3) {
    return await this.load(), this.parent.queryFeatureCount(e5, t3);
  }
  async queryObjectIds(e5, t3) {
    return await this.load(), this.parent.queryObjectIds(e5, t3);
  }
  async queryAttributeBins(e5, t3) {
    return await this.load(), this.parent.queryAttributeBins(e5, t3);
  }
};
r([m(I2)], P.prototype, "attributeTableTemplate", void 0), r([m({ readOnly: true })], P.prototype, "apiKey", null), r([m({ readOnly: true })], P.prototype, "capabilities", null), r([m({ readOnly: true })], P.prototype, "customParameters", null), r([m()], P.prototype, "dateFieldsTimeZone", null), r([m({ readOnly: true })], P.prototype, "datesInUnknownTimezone", null), r([m({ readOnly: true })], P.prototype, "definitionExpression", null), r([m({ readOnly: true })], P.prototype, "editingInfo", null), r([m({ readOnly: true })], P.prototype, "effectiveCapabilities", null), r([m({ json: { origins: { "web-scene": { write: false } }, write: true } })], P.prototype, "charts", void 0), r([m({ readOnly: true })], P.prototype, "createQueryVersion", null), r([m({ readOnly: true })], P.prototype, "defaultPopupTemplate", null), r([m({ readOnly: true })], P.prototype, "displayField", null), r([m({ type: Boolean, nonNullable: true, json: { name: "enableEditing", write: true, origins: { "web-scene": { read: false, write: false } } } })], P.prototype, "editingEnabled", void 0), r([m({ readOnly: true })], P.prototype, "effectiveEditingEnabled", null), r([m((() => {
  const e5 = a(m5);
  return e5.json.origins["web-map"] = { read: false, write: false }, e5;
})())], P.prototype, "elevationInfo", void 0), r([m({ readOnly: true })], P.prototype, "fields", null), r([m({ readOnly: true })], P.prototype, "fieldsIndex", null), r([m({ type: V3, json: { name: "formInfo", write: true, origins: { "web-scene": { read: false, write: false } } } })], P.prototype, "formTemplate", void 0), r([m({ readOnly: true })], P.prototype, "fullExtent", null), r([m({ readOnly: true })], P.prototype, "geometryFieldsInfo", null), r([m({ readOnly: true })], P.prototype, "geometryType", null), r([m({ readOnly: true })], P.prototype, "globalIdField", null), r([m({ readOnly: true })], P.prototype, "hasM", null), r([m({ readOnly: true })], P.prototype, "hasZ", null), r([m({ type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } }, write: { ignoreOrigin: true, isRequired: true } } })], P.prototype, "id", void 0), r([m({ type: [A], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: l3, write: true } })], P.prototype, "labelingInfo", void 0), r([m(p4)], P.prototype, "labelsVisible", void 0), r([m(d)], P.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide"], json: { write: true } })], P.prototype, "listMode", void 0), r([m((() => {
  const e5 = a(v);
  return e5.json.origins.service.read = false, e5;
})())], P.prototype, "maxScale", void 0), r([m((() => {
  const e5 = a(j2);
  return e5.json.origins.service.read = false, e5;
})())], P.prototype, "minScale", void 0), r([m({ readOnly: true })], P.prototype, "objectIdField", null), r([m(w)], P.prototype, "opacity", void 0), r([m({ readOnly: true })], P.prototype, "orderBy", null), r([m({ readOnly: true })], P.prototype, "outFields", null), r([m({ clonable: false })], P.prototype, "parent", void 0), r([m({ readOnly: true })], P.prototype, "parsedUrl", null), r([m(l4)], P.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: true } })], P.prototype, "popupTemplate", void 0), r([m({ readOnly: true })], P.prototype, "preferredTimeZone", null), r([m({ types: m4, json: { origins: { "web-scene": { types: u2 } }, name: "layerDefinition.drawingInfo.renderer", write: { overridePolicy(e5, t3) {
  return { ignoreOrigin: this.originIdOf(t3) < e2.PORTAL_ITEM };
} } } })], P.prototype, "renderer", null), r([m({ readOnly: true })], P.prototype, "returnM", null), r([m({ readOnly: true })], P.prototype, "returnZ", null), r([m({ readOnly: true })], P.prototype, "source", null), r([m({ readOnly: true })], P.prototype, "timeExtent", null), r([m({ readOnly: true })], P.prototype, "timeInfo", null), r([m({ readOnly: true })], P.prototype, "timeOffset", null), r([m({ type: String, nonNullable: true, json: { write: { ignoreOrigin: true, isRequired: true } } })], P.prototype, "title", void 0), r([m({ json: { read: false } })], P.prototype, "type", void 0), r([m({ readOnly: true })], P.prototype, "typeIdField", null), r([m({ readOnly: true })], P.prototype, "types", null), r([m({ readOnly: true })], P.prototype, "useViewTime", null), r([m({ type: Boolean, json: { name: "visibility", write: true } })], P.prototype, "visible", void 0), P = r([a3("esri.layers.catalog.CatalogFootprintLayer")], P);

// node_modules/@arcgis/core/layers/CatalogLayer.js
var V4 = s3();
function k3(e5) {
  return "object" == typeof e5 && null != e5 && "itemId" in e5 && "portalUrl" in e5;
}
function J(e5) {
  return "object" == typeof e5 && null != e5 && "url" in e5;
}
function H3(e5) {
  if (null == e5) return true;
  const t3 = Object.keys(e5);
  return !t3.length || 1 === t3.length && "id" === t3[0];
}
function K(e5, t3, r4, i2) {
  const o = e5.write({}, i2);
  H3(o) || (t3[r4] = o);
}
var W = class extends a4(k2(F(p(p2(c2(t(f(l2(b(j(S(e4(i(h)))))))))))))) {
  constructor(e5) {
    super(e5), this.legendEnabled = true, this._portals = /* @__PURE__ */ new Map(), this._layerToFootprint = /* @__PURE__ */ new WeakMap(), this.drawOrderField = "cd_draworder", this.dynamicGroupLayer = new v2({ parent: this }), this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.floorInfo = null, this.footprintLayer = new P({ parent: this }), this.itemNameField = "cd_itemname", this.itemSourceField = "cd_itemsource", this.itemTypeField = "cd_itemtype", this.layers = new V2([this.dynamicGroupLayer, this.footprintLayer]), this.maxScaleField = "cd_maxscale", this.minScaleField = "cd_minscale", this.orderBy = null, this.outFields = null, this.supportedSourceTypes = /* @__PURE__ */ new Set(["Catalog Layer"]), this.source = new G({ layer: this, supportedSourceTypes: this.supportedSourceTypes }), this.type = "catalog", this.typeIdField = null, this.types = null;
  }
  load(e5) {
    const t3 = null != e5 ? e5.signal : null, r4 = this.loadFromPortal({ supportedTypes: ["Feature Service"] }, e5).catch(a2).then((async () => {
      const { url: e6, source: r5, portalItem: o } = this;
      if (!e6) throw new s("catalog-layer:missing-url", "Catalog layer must be created with a url");
      if (null == this.layerId) {
        const r6 = await this._fetchFirstValidLayerId(t3);
        if (null == r6) throw new s("catalog-layer:missing-layerId", "There is no Catalog Layer in the service", { service: e6 });
        this.layerId = r6;
      }
      await r5.load({ signal: t3 });
      const { sourceJSON: s4 } = r5;
      s4 && (this.sourceJSON = s4, this.read(s4, { origin: "service", portalItem: o, portal: o?.portal, url: this.parsedUrl }));
    })).then((() => {
      const e6 = [this.itemNameField, this.itemSourceField, this.itemTypeField, this.minScaleField, this.maxScaleField], t4 = e6.filter(((e7) => !this.fieldsIndex.has(e7)));
      if (t4.length) throw new s("catalog-layer:missing-fields", "There are missing fields to operate properly", { requiredFields: e6, missingFields: t4 });
    })).then((() => H2(this, "load", e5)));
    return this.addResolvingPromise(r4), Promise.resolve(this);
  }
  destroy() {
    this.footprintLayer.destroy(), this.dynamicGroupLayer.destroy();
    for (const e5 of this._portals.values()) e5.destroy();
    this._portals.clear();
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") ?? 0) + 1;
  }
  get editingEnabled() {
    return this.loaded && null != this.capabilities && this.capabilities.operations.supportsEditing && this.userHasEditingPrivileges;
  }
  get effectiveEditingEnabled() {
    return false;
  }
  get parsedUrl() {
    const e5 = I(this.url);
    return null != e5 && null != this.layerId && (e5.path = V(e5.path, this.layerId.toString())), e5;
  }
  async applyEdits(e5, t3) {
    return q2(this, e5, t3);
  }
  on(e5, t3) {
    return super.on(e5, t3);
  }
  async createLayerFromFootprint(e5) {
    const t3 = await this._createLayer(e5);
    return this._configureLayer(t3, e5), this._layerToFootprint.set(t3, e5), t3;
  }
  createFootprintFromLayer(e5) {
    return this._layerToFootprint.get(e5)?.clone();
  }
  createQuery() {
    const e5 = new R(), t3 = this.capabilities?.query;
    e5.returnGeometry = true, t3 && (e5.compactGeometryEnabled = t3.supportsCompactGeometry, e5.defaultSpatialReferenceEnabled = t3.supportsDefaultSpatialReference), e5.outFields = ["*"];
    const { timeOffset: r4, timeExtent: i2 } = this;
    return e5.timeExtent = null != r4 && null != i2 ? i2.offset(-r4.value, r4.unit) : i2 || null, e5.where = this.definitionExpression || "1=1", e5;
  }
  getFeatureType(e5) {
    return oe(this.types, this.typeIdField, e5);
  }
  getFieldDomain(e5, t3) {
    const r4 = t3?.feature, i2 = this.getFeatureType(r4);
    if (i2) {
      const t4 = i2.domains && i2.domains[e5];
      if (t4 && "inherited" !== t4.type) return t4;
    }
    return this.getField(e5)?.domain;
  }
  async hasDataChanged() {
    return B(this);
  }
  async queryFeatures(e5, t3) {
    const r4 = await this.load(), i2 = await r4.source.queryFeatures(R.from(e5) ?? r4.createQuery(), t3);
    if (i2?.features) for (const o of i2.features) o.layer = o.sourceLayer = r4.footprintLayer;
    return i2;
  }
  async queryObjectIds(e5, t3) {
    return (await this.load()).source.queryObjectIds(R.from(e5) ?? this.createQuery(), t3);
  }
  async queryFeatureCount(e5, t3) {
    return (await this.load()).source.queryFeatureCount(R.from(e5) ?? this.createQuery(), t3);
  }
  async queryExtent(e5, t3) {
    return (await this.load()).source.queryExtent(R.from(e5) ?? this.createQuery(), t3);
  }
  serviceSupportsSpatialReference(e5) {
    return this.loaded && t2(this, e5);
  }
  read(e5, t3) {
    if (super.read(e5, t3), e5) {
      const { footprintLayer: r4, dynamicGroupLayer: i2 } = e5;
      r4 && this.footprintLayer.read(r4, t3), i2 && this.dynamicGroupLayer.read(i2, t3);
    }
  }
  async queryAttributeBins(e5, t3) {
    const { source: r4, capabilities: i2 } = await this.load();
    ae(e5, i2, "CatalogLayer");
    const o = await import("./AttributeBinsQuery-WK2S6C5J.js"), s4 = await r4.queryAttributeBins(o.default.from(e5), t3);
    if (s4.features) for (const a5 of s4.features) a5.layer = a5.sourceLayer = this.footprintLayer;
    return s4;
  }
  async _fetchFirstValidLayerId(e5) {
    const { data: r4 } = await H(this.url, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e5 });
    if (this.applyPreferredHost(r4), Array.isArray(r4?.layers)) return r4.layers.find((({ type: e6 }) => this.supportedSourceTypes.has(e6)))?.id;
  }
  async _createLayer(e5) {
    const t3 = e5.getAttribute(this.itemSourceField);
    if (!t3) throw new s("catalog-layer:item-source-missing", `The footprint is missing the "${this.itemSourceField}" attribute`);
    const r4 = JSON.parse(t3);
    if (k3(r4)) {
      const { itemId: e6, portalUrl: t4 } = r4, i2 = r2(t4), s5 = this.portalItem?.portal, a5 = C.getDefault();
      let n4, l5 = true;
      s5 && D(t4, s5.url) ? n4 = s5 : D(t4, a5.url) ? n4 = a5 : (n4 = u(this._portals, i2, (() => new C({ url: i2 }))), l5 = false);
      const y = await h.fromPortalItem(new k({ id: e6, portal: n4 }));
      return l5 || await $(y), y;
    }
    if (J(r4)) return h.fromArcGISServerUrl({ url: r4.url });
    const { default: s4 } = await import("./UnsupportedLayer-KGXHDHPU.js");
    return new s4();
  }
  _configureLayer(e5, t3) {
    const r4 = t3.getAttribute(this.itemNameField);
    r4 && (e5.title = r4);
    const i2 = t3.getAttribute(this.maxScaleField);
    null != i2 && "maxScale" in e5 && (e5.maxScale = i2);
    const o = t3.getAttribute(this.minScaleField);
    null != o && "minScale" in e5 && (e5.minScale = o);
  }
};
async function $(e5) {
  if ("portalItem" in e5 && e5.portalItem) {
    try {
      await e5.load();
    } catch {
    }
    e5.portalItem = null, "group" === e5.type && await Promise.allSettled([...e5.layers.map(((e6) => $(e6))), ...e5.tables.map(((e6) => $(e6)))]);
  }
}
r([m(d)], W.prototype, "legendEnabled", void 0), r([m({ readOnly: true })], W.prototype, "createQueryVersion", null), r([m({ readOnly: true })], W.prototype, "drawOrderField", void 0), r([m({ type: v2, readOnly: true, json: { read: false, write: { ignoreOrigin: true, writer: K } } })], W.prototype, "dynamicGroupLayer", void 0), r([m({ readOnly: true })], W.prototype, "editingEnabled", null), r([m({ readOnly: true })], W.prototype, "effectiveEditingEnabled", null), r([m({ json: { origins: { "web-scene": { name: "layerDefinition.elevationInfo", read: false, write: false } } } })], W.prototype, "elevationInfo", void 0), r([m({ ...V4.fields, readOnly: true, json: { origins: { service: { read: true } }, read: false } })], W.prototype, "fields", void 0), r([m(V4.fieldsIndex)], W.prototype, "fieldsIndex", void 0), r([m({ json: { origins: { "web-scene": { name: "layerDefinition.floorInfo", read: false, write: false } } } })], W.prototype, "floorInfo", void 0), r([m({ type: P, readOnly: true, json: { read: false, write: { ignoreOrigin: true, writer: K } } })], W.prototype, "footprintLayer", void 0), r([m(u3)], W.prototype, "id", void 0), r([m({ readOnly: true })], W.prototype, "itemNameField", void 0), r([m({ readOnly: true })], W.prototype, "itemSourceField", void 0), r([m({ readOnly: true })], W.prototype, "itemTypeField", void 0), r([m({ readOnly: true })], W.prototype, "layers", void 0), r([m({ type: ["show", "hide", "hide-children"] })], W.prototype, "listMode", void 0), r([m({ readOnly: true })], W.prototype, "maxScaleField", void 0), r([m({ readOnly: true })], W.prototype, "minScaleField", void 0), r([m({ value: "CatalogLayer", type: ["CatalogLayer"] })], W.prototype, "operationalLayerType", void 0), r([m({ json: { origins: { "web-scene": { name: "layerDefinition.orderBy", write: true, read: true } } } })], W.prototype, "orderBy", void 0), r([m(V4.outFields)], W.prototype, "outFields", void 0), r([m({ readOnly: true })], W.prototype, "parsedUrl", null), r([m({ readOnly: true })], W.prototype, "source", void 0), r([m({ json: { read: false } })], W.prototype, "type", void 0), r([m({ type: String })], W.prototype, "typeIdField", void 0), r([m({ type: [n3] })], W.prototype, "types", void 0), W = r([a3("esri.layers.CatalogLayer")], W);
var z = W;
export {
  z as default
};
//# sourceMappingURL=CatalogLayer-SQDOTXQW.js.map
