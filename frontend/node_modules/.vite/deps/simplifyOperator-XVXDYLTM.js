import {
  e,
  o,
  u
} from "./chunk-LRI5ZV6U.js";
import {
  Be,
  Me,
  Pe
} from "./chunk-T2YIGHGA.js";
import "./chunk-WDDL5MIW.js";
import "./chunk-XKWGLDG7.js";
import "./chunk-VPFF3G33.js";
import "./chunk-RJMWK2VP.js";
import "./chunk-ZXYXNXJE.js";
import "./chunk-I7OUBN5N.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-2AYGXVZI.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/geometry/operators/json/simplifyOperator.js
function p(e2) {
  const r = Pe(e2), c = r.getSpatialReference();
  return Me(e(r.getGeometry(), c, false), c);
}
function a(e2) {
  const [t, o2] = Be(e2);
  return o(t, o2, false).map(((e3) => Me(e3, o2)));
}
function i(t) {
  const r = Pe(t);
  return u(r.getGeometry(), r.getSpatialReference(), false);
}
export {
  p as execute,
  a as executeMany,
  i as isSimple
};
//# sourceMappingURL=simplifyOperator-XVXDYLTM.js.map
