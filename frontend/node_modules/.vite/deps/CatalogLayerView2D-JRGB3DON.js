import {
  S
} from "./chunk-4UTHGU4R.js";
import {
  u
} from "./chunk-M6JFBQWH.js";
import "./chunk-UTPZHDO6.js";
import "./chunk-ZYWMFOAJ.js";
import "./chunk-PVWZWDGB.js";
import "./chunk-B3RUO3VQ.js";
import "./chunk-746KDGCX.js";
import "./chunk-IFDA5FOT.js";
import "./chunk-JUXSLKSN.js";
import "./chunk-Y2AI7GA5.js";
import "./chunk-FPALEK52.js";
import "./chunk-7OH24VUH.js";
import "./chunk-SCMB64VM.js";
import "./chunk-R7YP6EQJ.js";
import "./chunk-P3R3JSYO.js";
import "./chunk-CAQUPYHC.js";
import "./chunk-OJQCHQYS.js";
import "./chunk-A6R2FXH6.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-YAXW2DL6.js";
import "./chunk-INI6MHIQ.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-RMRI4NYS.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-BLBN3L5Q.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-4AKMPOG7.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-ZJQPHR3K.js";
import {
  V
} from "./chunk-74GULGYB.js";
import "./chunk-HYAO4PVV.js";
import "./chunk-VNQUG2TO.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-EULNFFHG.js";
import "./chunk-CBXZL53X.js";
import "./chunk-SMO33YG7.js";
import "./chunk-LCBAL6ER.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-67AKDROO.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-POWGZO3T.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-NJZD7WM5.js";
import "./chunk-CL7VLXUR.js";
import "./chunk-FCX4ZA3Z.js";
import {
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2 as a
} from "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/views/layers/CatalogLayerView.js
var i = (i2) => {
  let s = class extends i2 {
    constructor(...r2) {
      super(...r2), this.layerViews = new V();
    }
    get dynamicGroupLayerView() {
      return this.layerViews.find(((r2) => r2.layer === this.layer?.dynamicGroupLayer));
    }
    get footprintLayerView() {
      return this.layerViews.find(((r2) => r2.layer === this.layer?.footprintLayer));
    }
    isUpdating() {
      return !this.dynamicGroupLayerView || !this.footprintLayerView || this.dynamicGroupLayerView.updating || this.footprintLayerView.updating;
    }
  };
  return r([m()], s.prototype, "layer", void 0), r([m()], s.prototype, "layerViews", void 0), r([m({ readOnly: true })], s.prototype, "dynamicGroupLayerView", null), r([m({ readOnly: true })], s.prototype, "footprintLayerView", null), s = r([a("esri.views.layers.CatalogLayerView")], s), s;
};

// node_modules/@arcgis/core/views/2d/layers/CatalogLayerView2D.js
var l = class extends i(S(u)) {
  constructor() {
    super(...arguments), this.layerViews = new V();
  }
  update(e) {
  }
  viewChange() {
  }
  moveEnd() {
  }
  attach() {
    this.addAttachHandles([this._updatingHandles.addOnCollectionChange((() => this.layerViews), (() => this._updateStageChildren()), { initial: true })]);
  }
  detach() {
    this.container.removeAllChildren();
  }
  _updateStageChildren() {
    this.container.removeAllChildren(), this.layerViews.forEach(((e, r2) => this.container.addChildAt(e.container, r2)));
  }
};
r([m()], l.prototype, "layerViews", void 0), l = r([a("esri.views.2d.layers.CatalogLayerView2D")], l);
var c = l;
export {
  c as default
};
//# sourceMappingURL=CatalogLayerView2D-JRGB3DON.js.map
