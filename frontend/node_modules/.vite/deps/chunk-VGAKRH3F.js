import {
  O,
  V,
  d
} from "./chunk-DCIDDLXK.js";
import {
  I
} from "./chunk-JIALW2VB.js";
import {
  B,
  j,
  x
} from "./chunk-XI5ICJMK.js";
import {
  R
} from "./chunk-4OFMCNMO.js";
import {
  f
} from "./chunk-SCMB64VM.js";
import {
  s
} from "./chunk-6JCZVSRM.js";
import {
  l3 as l
} from "./chunk-N626Y23H.js";
import {
  a
} from "./chunk-TJPLHZCD.js";

// node_modules/@arcgis/core/layers/graphics/data/executeQueryForSnapping.js
async function u(c, u2, y) {
  const d2 = l(y), { point: x2, distance: g, returnEdge: R2, vertexMode: j2 } = u2;
  if (!R2 && "none" === j2) return { candidates: [] };
  let w = a(u2.query);
  w = await c.schedule((() => B(w, c.definitionExpression, c.spatialReference)), d2), w = await c.reschedule((() => d(w, { availableFields: c.availableFields, fieldsIndex: c.fieldsIndex, geometryType: c.geometryType, spatialReference: c.spatialReference })), d2);
  const h = !s(x2.spatialReference, c.spatialReference);
  h && await x(x2.spatialReference, c.spatialReference);
  const b = "number" == typeof g ? g : g.x, Q = "number" == typeof g ? g : g.y, S = { xmin: x2.x - b, xmax: x2.x + b, ymin: x2.y - Q, ymax: x2.y + Q, spatialReference: x2.spatialReference }, U = h ? j(S, c.spatialReference) : S;
  if (!U) return { candidates: [] };
  const q = (await R(f(x2), null, { signal: d2 }))[0], E = (await R(f(U), null, { signal: d2 }))[0];
  if (null == q || null == E) return { candidates: [] };
  const F = new O(await c.reschedule((() => c.searchFeatures(V(E.toJSON()))), d2), w, c);
  await c.reschedule((() => c.executeObjectIdsQuery(F)), d2), await c.reschedule((() => c.executeTimeQuery(F)), d2), await c.reschedule((() => c.executeAttributesQuery(F)), d2), await c.reschedule((() => f2(c, F, d2)), d2);
  const T = q.toJSON(), v = h ? j(T, c.spatialReference) : T, I2 = h ? Math.max(U.xmax - U.xmin, U.ymax - U.ymin) / 2 : g;
  return F.createSnappingResponse({ ...u2, point: v, distance: I2 }, w.returnZ, x2.spatialReference);
}
async function f2(e, t, r) {
  const { query: a2 } = t, { spatialRel: i } = a2;
  if (!t?.items?.length || !a2.geometry || !i) return;
  const s2 = await I(i, a2.geometry, e.geometryType, e.hasZ, e.hasM), n = await e.runSpatialFilter(t.items, ((e2) => s2(e2.geometry)), r);
  t.items = n;
}

export {
  u
};
//# sourceMappingURL=chunk-VGAKRH3F.js.map
