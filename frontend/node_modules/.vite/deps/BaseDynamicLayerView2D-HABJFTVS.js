import {
  M
} from "./chunk-EEOK4ADL.js";
import {
  r as r2
} from "./chunk-IYDVS7PE.js";
import "./chunk-GCNSWEEW.js";
import "./chunk-WZCCHOOA.js";
import {
  i as i2
} from "./chunk-GOCIDHTW.js";
import "./chunk-G6DMFUCZ.js";
import "./chunk-6PL4I2QQ.js";
import {
  S
} from "./chunk-R4ARMIGB.js";
import {
  u
} from "./chunk-M6JFBQWH.js";
import "./chunk-GY7Z7OPO.js";
import "./chunk-JRBH6HCP.js";
import "./chunk-TI4LRNX7.js";
import "./chunk-JOKMLVBH.js";
import "./chunk-OBI6XSOO.js";
import "./chunk-ZYWMFOAJ.js";
import "./chunk-6HU6D6AI.js";
import "./chunk-CO23VBIK.js";
import "./chunk-QFNAF2OO.js";
import "./chunk-RYUENKYI.js";
import "./chunk-OJQCHQYS.js";
import "./chunk-W7HTQBDK.js";
import "./chunk-ISZVN2MZ.js";
import "./chunk-SNXPARJV.js";
import "./chunk-PGNIZQW2.js";
import "./chunk-K55CXVYD.js";
import "./chunk-LIWGRYNH.js";
import "./chunk-24S6C5S6.js";
import "./chunk-7Y4U2JD3.js";
import "./chunk-GCTSCKPO.js";
import "./chunk-6U4EGJOK.js";
import "./chunk-W7U4L72B.js";
import "./chunk-7ASGQ7X4.js";
import "./chunk-DL2726UG.js";
import "./chunk-AKZZRLKD.js";
import "./chunk-746KDGCX.js";
import "./chunk-IFDA5FOT.js";
import "./chunk-PN5QNGVV.js";
import "./chunk-JUXSLKSN.js";
import "./chunk-YGH6TKDR.js";
import "./chunk-QNRDEVXA.js";
import "./chunk-KW37MFF6.js";
import "./chunk-QIPPWPN2.js";
import "./chunk-Y2AI7GA5.js";
import "./chunk-P3R3JSYO.js";
import "./chunk-CAQUPYHC.js";
import "./chunk-2RL34CVC.js";
import "./chunk-BNQMKYX6.js";
import "./chunk-B6C2GOG6.js";
import "./chunk-K3VYMAVM.js";
import "./chunk-FPALEK52.js";
import "./chunk-KLTPDVMD.js";
import "./chunk-MX6AIKIJ.js";
import "./chunk-7OH24VUH.js";
import "./chunk-A6R2FXH6.js";
import "./chunk-H6ZVHKNF.js";
import "./chunk-YAXW2DL6.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-7I4TWCTW.js";
import "./chunk-SCMB64VM.js";
import "./chunk-INI6MHIQ.js";
import "./chunk-R7YP6EQJ.js";
import "./chunk-74GULGYB.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-RMRI4NYS.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-BLBN3L5Q.js";
import "./chunk-CBXZL53X.js";
import "./chunk-HYAO4PVV.js";
import "./chunk-VNQUG2TO.js";
import "./chunk-EULNFFHG.js";
import "./chunk-3QHX4R4B.js";
import "./chunk-SMO33YG7.js";
import "./chunk-LCBAL6ER.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-67AKDROO.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-2AYGXVZI.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-4AKMPOG7.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-NJZD7WM5.js";
import "./chunk-CL7VLXUR.js";
import "./chunk-FCX4ZA3Z.js";
import {
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2 as a
} from "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-JNYZ3I5R.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  b
} from "./chunk-N626Y23H.js";
import {
  i3 as i
} from "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/views/2d/layers/BaseDynamicLayerView2D.js
var m2 = class extends i2(S(u)) {
  update(t) {
    this._strategy.update(t).catch(((t2) => {
      b(t2) || i.getLogger(this).error(t2);
    })), this.notifyChange("updating");
  }
  attach() {
    this._bitmapContainer = new r2(), this.container.addChild(this._bitmapContainer), this._strategy = new M({ container: this._bitmapContainer, fetchSource: this.fetchBitmapData.bind(this), requestUpdate: this.requestUpdate.bind(this) });
  }
  detach() {
    this._strategy.destroy(), this._strategy = null, this.container.removeChild(this._bitmapContainer), this._bitmapContainer.removeAllChildren();
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  fetchBitmapData(t, e, r3) {
    return this.layer.fetchImageBitmap(t, e, r3);
  }
  async doRefresh() {
    this.requestUpdate();
  }
  isUpdating() {
    return this._strategy.updating || this.updateRequested;
  }
};
r([m()], m2.prototype, "_strategy", void 0), r([m()], m2.prototype, "updating", void 0), m2 = r([a("esri.views.2d.layers.BaseDynamicLayerView2D")], m2);
var d = m2;
export {
  d as default
};
//# sourceMappingURL=BaseDynamicLayerView2D-HABJFTVS.js.map
