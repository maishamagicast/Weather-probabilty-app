{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/materials/stippleTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/ensureColor4.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/RibbonLineTechniqueConfiguration.js", "../../@arcgis/core/chunks/RibbonLine.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{packFloatRGBA as t}from\"../../../../core/floatRGBA.js\";import{ProceduralTextureRepository as e}from\"./ProceduralTextureRepository.js\";import{PixelFormat as r,TextureWrapMode as o}from\"../../../webgl/enums.js\";import{Texture as n}from\"../../../webgl/Texture.js\";import{TextureDescriptor as i}from\"../../../webgl/TextureDescriptor.js\";function u(t,u){return new e((e=>{const{encodedData:u,textureSize:c}=a(e),f=new i;return f.internalFormat=r.RGBA,f.width=c,f.height=1,f.wrapMode=o.REPEAT,new n(t,f,u)}),(t=>`${t.pattern.join(\",\")}-r${t.pixelRatio}`),u)}function a(e){const r=c(e),o=1/e.pixelRatio,n=f(e),i=s(e),u=(Math.floor(.5*(i-1))+.5)*o,a=[];let l=1;for(const t of r){for(let e=0;e<t;e++){const r=l*(Math.min(e,t-1-e)+.5)*o/u*.5+.5;a.push(r)}l=-l}const p=Math.round(r[0]/2),m=[...a.slice(p),...a.slice(0,p)],d=new Uint8Array(4*n);let x=0;for(const c of m)t(c,d,x),x+=4;return{encodedData:d,textureSize:n}}function c(t){return t.pattern.map((e=>Math.round(e*t.pixelRatio)))}function f(t){if(null==t)return 1;const e=c(t);return Math.floor(e.reduce(((t,e)=>t+e)))}function s(t){return c(t).reduce(((t,e)=>Math.max(t,e)))}export{s as computeLongestPattern,f as computeTextureSize,u as createStippleTextureRepository};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{s as r}from\"../../../../chunks/vec42.js\";import{ZEROS as o,create as t}from\"../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";function s(t){return null==t?o:4===t.length?t:r(c,t[0],t[1],t[2],1)}const c=t();export{s as ensureColor4};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../util/RgbaFloatEncoding.glsl.js\";import{addCameraPosition as t,addPixelRatio as o}from\"../util/View.glsl.js\";import{Float4PassUniform as r}from\"../../shaderModules/Float4PassUniform.js\";import{FloatBindUniform as i}from\"../../shaderModules/FloatBindUniform.js\";import{FloatPassUniform as l}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as a,If as p}from\"../../shaderModules/glsl.js\";import{Texture2DPassUniform as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{computeTextureSize as n,computeLongestPattern as d}from\"../../../materials/stippleTextureRepository.js\";import{ensureColor4 as c}from\"../../../shaders/ensureColor4.js\";function f(n,d){if(!d.stippleEnabled)return void n.fragment.code.add(a`float getStippleAlpha() { return 1.0; }\nvoid discardByStippleAlpha(float stippleAlpha, float threshold) {}\nvec4 blendStipple(vec4 color, float stippleAlpha) { return color; }`);const f=!(d.draped&&d.stipplePreferContinuous),{vertex:g,fragment:h}=n;h.include(e),d.draped||(t(g,d),g.uniforms.add(new i(\"worldToScreenPerDistanceRatio\",(({camera:e})=>1/e.perScreenPixelRatio))).code.add(a`float computeWorldToScreenRatio(vec3 segmentCenter) {\nfloat segmentDistanceToCamera = length(segmentCenter - cameraPosition);\nreturn worldToScreenPerDistanceRatio / segmentDistanceToCamera;\n}`)),n.varyings.add(\"vStippleDistance\",\"float\"),n.varyings.add(\"vStippleDistanceLimits\",\"vec2\"),n.varyings.add(\"vStipplePatternStretch\",\"float\"),g.code.add(a`\n    float discretizeWorldToScreenRatio(float worldToScreenRatio) {\n      float step = ${a.float(u)};\n\n      float discreteWorldToScreenRatio = log(worldToScreenRatio);\n      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;\n      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);\n      return discreteWorldToScreenRatio;\n    }\n  `),g.code.add(a`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),g.code.add(a`\n    if (segmentLengthPseudoScreen >= ${f?\"patternLength\":\"1e4\"}) {\n  `),o(g),g.code.add(a`float repetitions = segmentLengthScreen / (patternLength * pixelRatio);\nfloat flooredRepetitions = max(1.0, floor(repetitions + 0.5));\nfloat segmentLengthScreenRounded = flooredRepetitions * patternLength;\nfloat stretch = repetitions / flooredRepetitions;\nvStipplePatternStretch = max(0.75, stretch);\nreturn vec2(0.0, segmentLengthScreenRounded);\n}\nreturn vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);\n}`),h.uniforms.add(new s(\"stipplePatternTexture\",(e=>e.stippleTexture)),new l(\"stipplePatternSDFNormalizer\",(e=>m(e.stipplePattern))),new l(\"stipplePatternPixelSizeInv\",(e=>1/S(e)))),d.stippleOffColorEnabled&&h.uniforms.add(new r(\"stippleOffColor\",(e=>c(e.stippleOffColor)))),h.code.add(a`float getStippleSDF(out bool isClamped) {\nfloat stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);\nvec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;\nisClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;\nfloat u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv * vLineSizeInv;\nu = fract(u);\nfloat encodedSDF = rgbaTofloat(texture(stipplePatternTexture, vec2(u, 0.5)));\nfloat sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;\nreturn (sdf - 0.5) * vStipplePatternStretch + 0.5;\n}\nfloat getStippleSDF() {\nbool ignored;\nreturn getStippleSDF(ignored);\n}\nfloat getStippleAlpha() {\nbool isClamped;\nfloat stippleSDF = getStippleSDF(isClamped);\nfloat antiAliasedResult = clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);\nreturn isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;\n}`),h.code.add(a`\n    void discardByStippleAlpha(float stippleAlpha, float threshold) {\n     ${p(!d.stippleOffColorEnabled,\"if (stippleAlpha < threshold) { discard; }\")}\n    }\n\n    vec4 blendStipple(vec4 color, float stippleAlpha) {\n      return ${d.stippleOffColorEnabled?\"mix(color, stippleOffColor, stippleAlpha)\":\"vec4(color.rgb, color.a * stippleAlpha)\"};\n    }\n  `)}function m(e){return e?(Math.floor(.5*(d(e)-1))+.5)/e.pixelRatio:1}function S(e){const t=e.stipplePattern;return t?n(e.stipplePattern)/t.pixelRatio:1}const u=.4;export{f as LineStipple,S as computePixelSize};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../../chunks/tslib.es6.js\";import{TextureCoordinateType as t}from\"../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{EmissionSource as e}from\"../core/shaderLibrary/output/Emissions.glsl.js\";import{parameter as i}from\"../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{DefaultTechniqueConfiguration as r}from\"../materials/DefaultTechniqueConfiguration.js\";var s;!function(o){o[o.BUTT=0]=\"BUTT\",o[o.SQUARE=1]=\"SQUARE\",o[o.ROUND=2]=\"ROUND\",o[o.COUNT=3]=\"COUNT\"}(s||(s={}));class p extends r{constructor(){super(...arguments),this.capType=s.BUTT,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.occluder=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.wireframe=!1,this.discardInvisibleFragments=!1,this.objectAndLayerIdColorInstanced=!1,this.textureCoordinateType=t.None,this.emissionSource=e.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.overlayEnabled=!1,this.snowCover=!1}}o([i({count:s.COUNT})],p.prototype,\"capType\",void 0),o([i()],p.prototype,\"hasPolygonOffset\",void 0),o([i()],p.prototype,\"writeDepth\",void 0),o([i()],p.prototype,\"draped\",void 0),o([i()],p.prototype,\"stippleEnabled\",void 0),o([i()],p.prototype,\"stippleOffColorEnabled\",void 0),o([i()],p.prototype,\"stipplePreferContinuous\",void 0),o([i()],p.prototype,\"roundJoins\",void 0),o([i()],p.prototype,\"applyMarkerOffset\",void 0),o([i()],p.prototype,\"vvSize\",void 0),o([i()],p.prototype,\"vvColor\",void 0),o([i()],p.prototype,\"vvOpacity\",void 0),o([i()],p.prototype,\"falloffEnabled\",void 0),o([i()],p.prototype,\"innerColorEnabled\",void 0),o([i()],p.prototype,\"hasOccludees\",void 0),o([i()],p.prototype,\"occluder\",void 0),o([i()],p.prototype,\"terrainDepthTest\",void 0),o([i()],p.prototype,\"cullAboveTerrain\",void 0),o([i()],p.prototype,\"wireframe\",void 0),o([i()],p.prototype,\"discardInvisibleFragments\",void 0),o([i()],p.prototype,\"objectAndLayerIdColorInstanced\",void 0);export{s as CapType,p as RibbonLineTechniqueConfiguration};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{RibbonVertexPosition as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/RibbonVertexPosition.glsl.js\";import{LineStipple as r,computePixelSize as o}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js\";import{MarkerSizing as a}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MarkerSizing.glsl.js\";import{PiUtils as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js\";import{terrainDepthTest as l}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";import{ColorConversion as d}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as p,addPixelRatio as c}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2BindUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/Float2BindUniform.js\";import{Float4BindUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/Float4BindUniform.js\";import{Float4PassUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatBindUniform as g}from\"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";import{FloatPassUniform as h}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as D}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Matrix4BindUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4BindUniform.js\";import{VertexAttribute as u}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{LineMarkerSpace as x}from\"../views/3d/webgl-engine/shaders/LineMarkerTechniqueConfiguration.js\";import{outputColorHighlightOID as L}from\"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";import{CapType as w}from\"../views/3d/webgl-engine/shaders/RibbonLineTechniqueConfiguration.js\";import{ShaderBuilder as b}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as y}from\"../webscene/support/AlphaCutoff.js\";const j=1;function P(P){const C=new b,{attributes:F,varyings:A,vertex:R,fragment:z}=C,{applyMarkerOffset:T,draped:V,output:W,capType:E,stippleEnabled:O,falloffEnabled:M,roundJoins:N,wireframe:_,innerColorEnabled:I}=P;z.include(s),C.include(n,P),C.include(r,P),C.include(t,P),C.include(l,P);const k=T&&!V;k&&(R.uniforms.add(new h(\"markerScale\",(e=>e.markerScale))),C.include(a,{space:x.World})),p(R,P),R.uniforms.add(new S(\"inverseProjectionMatrix\",(e=>e.camera.inverseProjectionMatrix)),new m(\"nearFar\",(e=>e.camera.nearFar)),new h(\"miterLimit\",(e=>\"miter\"!==e.join?0:e.miterLimit)),new v(\"viewport\",(e=>e.camera.fullViewport))),R.constants.add(\"LARGE_HALF_FLOAT\",\"float\",65500),F.add(u.POSITION,\"vec3\"),F.add(u.PREVIOUSDELTA,\"vec4\"),F.add(u.NEXTDELTA,\"vec4\"),F.add(u.LINEPARAMETERS,\"vec2\"),F.add(u.U0,\"float\"),A.add(\"vColor\",\"vec4\"),A.add(\"vpos\",\"vec3\",{invariant:!0}),A.add(\"vLineDistance\",\"float\"),A.add(\"vLineWidth\",\"float\");const U=O;U&&A.add(\"vLineSizeInv\",\"float\");const B=E===w.ROUND,$=O&&B,H=M||$;H&&A.add(\"vLineDistanceNorm\",\"float\"),B&&(A.add(\"vSegmentSDF\",\"float\"),A.add(\"vReverseSegmentSDF\",\"float\")),R.code.add(D`vec2 perpendicular(vec2 v) {\nreturn vec2(v.y, -v.x);\n}\nfloat interp(float ncp, vec4 a, vec4 b) {\nreturn (-ncp - a.z) / (b.z - a.z);\n}\nvec2 rotate(vec2 v, float a) {\nfloat s = sin(a);\nfloat c = cos(a);\nmat2 m = mat2(c, -s, s, c);\nreturn m * v;\n}`),R.code.add(D`vec4 projectAndScale(vec4 pos) {\nvec4 posNdc = proj * pos;\nposNdc.xy *= viewport.zw / posNdc.w;\nreturn posNdc;\n}`),R.code.add(D`void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {\nfloat vnp = nearFar[0] * 0.99;\nif(pos.z > -nearFar[0]) {\nif (!isStartVertex) {\nif(prev.z < -nearFar[0]) {\npos = mix(prev, pos, interp(vnp, prev, pos));\nnext = pos;\n} else {\npos = vec4(0.0, 0.0, 0.0, 1.0);\n}\n} else {\nif(next.z < -nearFar[0]) {\npos = mix(pos, next, interp(vnp, pos, next));\nprev = pos;\n} else {\npos = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}\n} else {\nif (prev.z > -nearFar[0]) {\nprev = mix(pos, prev, interp(vnp, pos, prev));\n}\nif (next.z > -nearFar[0]) {\nnext = mix(next, pos, interp(vnp, next, pos));\n}\n}\nforwardViewPosDepth(pos.xyz);\npos = projectAndScale(pos);\nnext = projectAndScale(next);\nprev = projectAndScale(prev);\n}`),c(R),R.constants.add(\"aaWidth\",\"float\",O?0:1).main.add(D`\n    // unpack values from vertex type\n    bool isStartVertex = abs(abs(lineParameters.y)-3.0) == 1.0;\n    vec3 prevPosition = position + previousDelta.xyz * previousDelta.w;\n    vec3 nextPosition = position + nextDelta.xyz * nextDelta.w;\n\n    float coverage = 1.0;\n\n    // Check for special value of lineParameters.y which is used by the Renderer when graphics are removed before the\n    // VBO is recompacted. If this is the case, then we just project outside of clip space.\n    if (lineParameters.y == 0.0) {\n      // Project out of clip space\n      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n    else {\n      bool isJoin = abs(lineParameters.y) < 3.0;\n      float lineSize = getSize();\n\n      if (lineSize < 1.0) {\n        coverage = lineSize; // convert sub-pixel coverage to alpha\n        lineSize = 1.0;\n      }\n      lineSize += aaWidth;\n\n      float lineWidth = lineSize * pixelRatio;\n      vLineWidth = lineWidth;\n      ${U?D`vLineSizeInv = 1.0 / lineSize;`:\"\"}\n\n      vec4 pos  = view * vec4(position, 1.0);\n      vec4 prev = view * vec4(prevPosition, 1.0);\n      vec4 next = view * vec4(nextPosition, 1.0);\n  `),k&&R.main.add(D`vec4 other = isStartVertex ? next : prev;\nbool markersHidden = areWorldMarkersHidden(pos, other);\nif(!isJoin && !markersHidden) {\npos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;\n}`),R.main.add(D`clipAndTransform(pos, prev, next, isStartVertex);\nvec2 left = (pos.xy - prev.xy);\nvec2 right = (next.xy - pos.xy);\nfloat leftLen = length(left);\nfloat rightLen = length(right);`);(O||B)&&R.main.add(D`\n      float isEndVertex = float(!isStartVertex);\n      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);\n      vec2 segment = mix(right, left, isEndVertex);\n      ${B?D`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:\"\"}\n    `),R.main.add(D`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);\nright = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);\nvec2 capDisplacementDir = vec2(0, 0);\nvec2 joinDisplacementDir = vec2(0, 0);\nfloat displacementLen = lineWidth;\nif (isJoin) {\nbool isOutside = (left.x * right.y - left.y * right.x) * lineParameters.y > 0.0;\njoinDisplacementDir = normalize(left + right);\njoinDisplacementDir = perpendicular(joinDisplacementDir);\nif (leftLen > 0.001 && rightLen > 0.001) {\nfloat nDotSeg = dot(joinDisplacementDir, left);\ndisplacementLen /= length(nDotSeg * left - joinDisplacementDir);\nif (!isOutside) {\ndisplacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));\n}\n}\nfloat subdivisionFactor = lineParameters.x;\nif (isOutside && (displacementLen > miterLimit * lineWidth)) {`),N?R.main.add(D`\n        vec2 startDir = leftLen < 0.001 ? right : left;\n        startDir = perpendicular(startDir);\n\n        vec2 endDir = rightLen < 0.001 ? left : right;\n        endDir = perpendicular(endDir);\n\n        float factor = ${O?D`min(1.0, subdivisionFactor * ${D.float((j+2)/(j+1))})`:D`subdivisionFactor`};\n\n        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));\n        joinDisplacementDir = rotate(startDir, -sign(lineParameters.y) * factor * rotationAngle);\n      `):R.main.add(D`if (leftLen < 0.001) {\njoinDisplacementDir = right;\n}\nelse if (rightLen < 0.001) {\njoinDisplacementDir = left;\n}\nelse {\njoinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;\n}\njoinDisplacementDir = perpendicular(joinDisplacementDir);`);const J=E!==w.BUTT;return R.main.add(D`\n        displacementLen = lineWidth;\n      }\n    } else {\n      // CAP handling ---------------------------------------------------\n      joinDisplacementDir = isStartVertex ? right : left;\n      joinDisplacementDir = perpendicular(joinDisplacementDir);\n\n      ${J?D`capDisplacementDir = isStartVertex ? -right : left;`:\"\"}\n    }\n  `),R.main.add(D`\n    // Displacement (in pixels) caused by join/or cap\n    vec2 dpos = joinDisplacementDir * sign(lineParameters.y) * displacementLen + capDisplacementDir * displacementLen;\n    float lineDistNorm = sign(lineParameters.y) * pos.w;\n\n    vLineDistance =  lineWidth * lineDistNorm;\n    ${H?D`vLineDistanceNorm = lineDistNorm;`:\"\"}\n\n    pos.xy += dpos;\n  `),B&&R.main.add(D`vec2 segmentDir = normalize(segment);\nvSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;\nvReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),O&&(V?R.uniforms.add(new g(\"worldToScreenRatio\",(e=>1/e.screenToPCSRatio))):R.main.add(D`vec3 segmentCenter = mix((nextPosition + position) * 0.5, (position + prevPosition) * 0.5, isEndVertex);\nfloat worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),R.main.add(D`float segmentLengthScreenDouble = length(segment);\nfloat segmentLengthScreen = segmentLengthScreenDouble * 0.5;\nfloat discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);\nfloat segmentLengthRender = length(mix(nextPosition - position, position - prevPosition, isEndVertex));\nvStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),V?R.main.add(D`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;\nfloat startPseudoScreen = u0 * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):R.main.add(D`float startPseudoScreen = mix(u0, u0 - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;\nfloat segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),R.uniforms.add(new h(\"stipplePatternPixelSize\",(e=>o(e)))),R.main.add(D`float patternLength = lineSize * stipplePatternPixelSize;\nvStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);\nvStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);\nif (segmentLengthScreenDouble >= 0.001) {\nvec2 stippleDisplacement = pos.xy - segmentOrigin;\nfloat stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);\nvStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);\n}\nvStippleDistanceLimits *= pos.w;\nvStippleDistance *= pos.w;\nvStippleDistanceLimits = isJoin ?\nvStippleDistanceLimits :\nisStartVertex ?\nvec2(-1e34, vStippleDistanceLimits.y) :\nvec2(vStippleDistanceLimits.x, 1e34);`)),R.main.add(D`\n      // Convert back into NDC\n      pos.xy = (pos.xy / viewport.zw) * pos.w;\n\n      vColor = getColor();\n      vColor.a *= coverage;\n\n      ${_&&!V?\"pos.z -= 0.001 * pos.w;\":\"\"}\n\n      // transform final position to camera space for slicing\n      vpos = (inverseProjectionMatrix * pos).xyz;\n      gl_Position = pos;\n      forwardObjectAndLayerIdColor();\n    }`),C.fragment.include(i,P),C.include(L,P),z.include(d),z.main.add(D`discardBySlice(vpos);\ndiscardByTerrainDepth();`),_?z.main.add(D`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(B&&z.main.add(D`\n        float sdf = min(vSegmentSDF, vReverseSegmentSDF);\n        vec2 fragmentPosition = vec2(\n          min(sdf, 0.0),\n          vLineDistance\n        ) * gl_FragCoord.w;\n\n        float fragmentRadius = length(fragmentPosition);\n        float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale\n        float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);\n\n        if (capCoverage < ${D.float(y)}) {\n          discard;\n        }\n      `),$?z.main.add(D`\n      vec2 stipplePosition = vec2(\n        min(getStippleSDF() * 2.0 - 1.0, 0.0),\n        vLineDistanceNorm * gl_FragCoord.w\n      );\n      float stippleRadius = length(stipplePosition * vLineWidth);\n      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale\n      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);\n      float stippleAlpha = step(${D.float(y)}, stippleCoverage);\n      `):z.main.add(D`float stippleAlpha = getStippleAlpha();`),W!==e.ObjectAndLayerIdColor&&z.main.add(D`discardByStippleAlpha(stippleAlpha, ${D.float(y)});`),z.uniforms.add(new f(\"intrinsicColor\",(e=>e.color))),z.main.add(D`vec4 color = intrinsicColor * vColor;`),I&&(z.uniforms.add(new f(\"innerColor\",(e=>e.innerColor??e.color)),new h(\"innerWidth\",((e,i)=>e.innerWidth*i.camera.pixelRatio))),z.main.add(D`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;\nfloat innerAA = clamp(0.5 - distToInner, 0.0, 1.0);\nfloat innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);\ncolor = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),z.main.add(D`vec4 finalColor = blendStipple(color, stippleAlpha);`),M&&(z.uniforms.add(new h(\"falloff\",(e=>e.falloff))),z.main.add(D`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`)),O||z.main.add(D`float featherStartDistance = max(vLineWidth - 2.0, 0.0);\nfloat value = abs(vLineDistance) * gl_FragCoord.w;\nfloat feather = (value - featherStartDistance) / (vLineWidth - featherStartDistance);\nfinalColor.a *= 1.0 - clamp(feather, 0.0, 1.0);`)),z.main.add(D`outputColorHighlightOID(finalColor, vpos, finalColor.rgb);`),C}const C=Object.freeze(Object.defineProperty({__proto__:null,build:P,ribbonlineNumRoundJoinSubdivisions:j},Symbol.toStringTag,{value:\"Module\"}));export{C as R,P as b,j as r};\n"],
  "mappings": "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",
  "names": ["c", "t", "e", "f", "s", "s", "t", "c", "f", "n", "d", "t", "e", "u", "s", "S", "s", "o", "p", "a", "P", "C", "i", "M", "t", "f", "e", "s", "n", "o", "S"]
}
