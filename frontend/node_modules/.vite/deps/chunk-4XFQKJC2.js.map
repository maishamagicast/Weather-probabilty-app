{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/Integer2PassUniform.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/HighlightCellGridScreenSpacePass.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{BindType as r}from\"../../../../webgl/BindType.js\";import{Uniform as s}from\"../../../../webgl/Uniform.js\";class e extends s{constructor(s,e){super(s,\"ivec2\",r.Pass,((r,o,i)=>r.setUniform2iv(s,e(o,i))))}}export{e as Integer2PassUniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{set as e}from\"../../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as l}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{glsl as i}from\"../shaderModules/glsl.js\";import{Integer2PassUniform as t}from\"../shaderModules/Integer2PassUniform.js\";import{IntegerPassUniform as o}from\"../shaderModules/IntegerPassUniform.js\";import{Texture2DUintPassUniform as n}from\"../shaderModules/Texture2DUintPassUniform.js\";import{g as c}from\"../../../../../chunks/HighlightDownsample.glsl.js\";function s(l){const{vertex:s}=l;s.uniforms.add(new n(\"coverageTexture\",(e=>e.coverageTexture)),new t(\"highlightRenderCellCount\",(l=>e(r,l.horizontalCellCount,l.verticalCellCount))),new t(\"highlightTextureResolution\",(({highlightTexture:l})=>e(r,l.descriptor.width,l.descriptor.height))),new o(\"highlightLevel\",(e=>e.highlightLevel))).constants.add(\"cellSize\",\"int\",c),l.varyings.add(\"sUV\",\"vec2\"),l.varyings.add(\"vOutlinePossible\",\"float\"),s.code.add(i`const ivec2 cellVertices[4] = ivec2[4](ivec2(0,0), ivec2(1,0), ivec2(0,1), ivec2(1,1));`),s.main.add(i`int cellIndex = gl_InstanceID;\nint cellX = cellIndex % highlightRenderCellCount[0];\nint cellY = (cellIndex - cellX) / highlightRenderCellCount[0];\nivec2 cellPos = ivec2(cellX, cellY);\nuvec2 covTexel = texelFetch(coverageTexture, cellPos, 0).rg;\nint channelIndex = (highlightLevel >> 2) & 3;\nuint channelValue = covTexel[channelIndex];\nint highlightIndex = (highlightLevel & 3) << 1;\nbool covered = ((channelValue >> highlightIndex) & 1u) == 1u;\nif (!covered) {\ngl_Position = vec4(0.0);\nreturn;\n}\nvOutlinePossible = (((channelValue >> highlightIndex) & 2u) == 2u) ? 1.0 : 0.0;\nivec2 iPosInCell = cellVertices[gl_VertexID];\nvec2 sPos = vec2(cellPos * cellSize + iPosInCell * (cellSize));\nvec2 vPos = sPos / vec2(highlightTextureResolution);\nsUV = vPos;\ngl_Position = vec4(2.0 * vPos - vec2(1.0), 0.0, 1.0);`)}const r=l();export{s as HighlightCellGridScreenSpacePass};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAIgH,IAAM,IAAN,cAAgB,EAAC;AAAA,EAAC,YAAYA,IAAEC,IAAE;AAAC,UAAMD,IAAE,SAAQ,EAAE,OAAM,CAACE,IAAEC,IAAEC,OAAIF,GAAE,cAAcF,IAAEC,GAAEE,IAAEC,EAAC,CAAC,EAAE;AAAA,EAAC;AAAC;;;ACAmT,SAASC,GAAE,GAAE;AAAC,QAAK,EAAC,QAAOA,GAAC,IAAE;AAAE,EAAAA,GAAE,SAAS,IAAI,IAAI,EAAE,oBAAmB,CAAAC,OAAGA,GAAE,gBAAgB,GAAE,IAAI,EAAE,6BAA4B,CAAAC,OAAG,EAAE,GAAEA,GAAE,qBAAoBA,GAAE,iBAAiB,EAAE,GAAE,IAAI,EAAE,+BAA8B,CAAC,EAAC,kBAAiBA,GAAC,MAAI,EAAE,GAAEA,GAAE,WAAW,OAAMA,GAAE,WAAW,MAAM,EAAE,GAAE,IAAIC,GAAE,mBAAkB,CAAAF,OAAGA,GAAE,eAAe,CAAC,EAAE,UAAU,IAAI,YAAW,OAAM,CAAC,GAAE,EAAE,SAAS,IAAI,OAAM,MAAM,GAAE,EAAE,SAAS,IAAI,oBAAmB,OAAO,GAAED,GAAE,KAAK,IAAII,2FAA0F,GAAEJ,GAAE,KAAK,IAAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAkBv/B;AAAC;AAAC,IAAM,IAAE,EAAE;",
  "names": ["s", "e", "r", "o", "i", "s", "e", "l", "o", "n"]
}
