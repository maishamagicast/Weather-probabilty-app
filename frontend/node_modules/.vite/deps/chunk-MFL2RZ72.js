import {
  o
} from "./chunk-XJOLJK3F.js";
import {
  f as f2,
  s
} from "./chunk-ZVNJ2S2Z.js";
import {
  v
} from "./chunk-SCMB64VM.js";
import {
  f
} from "./chunk-LCBAL6ER.js";
import {
  c
} from "./chunk-6JCZVSRM.js";
import {
  H
} from "./chunk-2AYGXVZI.js";
import {
  l
} from "./chunk-FCX4ZA3Z.js";
import {
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2 as a
} from "./chunk-S62CSPIH.js";
import {
  w
} from "./chunk-X26VPODZ.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";

// node_modules/@arcgis/core/rest/support/ProjectParameters.js
var p = class extends l {
  constructor(r2) {
    super(r2), this.geometries = [], this.outSpatialReference = null, this.transformation = null, this.transformForward = null;
  }
  toJSON() {
    const r2 = this.geometries.map(((r3) => r3.toJSON())), o2 = this.geometries[0], t = {};
    return t.outSR = c(this.outSpatialReference), t.inSR = c(o2.spatialReference), t.geometries = JSON.stringify({ geometryType: v(o2), geometries: r2 }), this.transformation && (t.transformation = this.transformation.wkid || JSON.stringify(this.transformation)), null != this.transformForward && (t.transformForward = this.transformForward), t;
  }
};
r([m()], p.prototype, "geometries", void 0), r([m({ type: f, json: { read: { source: "outSR" } } })], p.prototype, "outSpatialReference", void 0), r([m()], p.prototype, "transformation", void 0), r([m()], p.prototype, "transformForward", void 0), p = r([a("esri.rest.support.ProjectParameters")], p);

// node_modules/@arcgis/core/rest/geometryService/project.js
var i = w(p);
async function n(o2, m2, n2) {
  m2 = i(m2);
  const u = f2(o2), c2 = { ...u.query, f: "json", ...m2.toJSON() }, j = m2.outSpatialReference, a2 = v(m2.geometries[0]), f3 = s(c2, n2);
  return H(u.path + "/project", f3).then((({ data: { geometries: r2 } }) => o(r2, a2, j)));
}

export {
  p,
  n
};
//# sourceMappingURL=chunk-MFL2RZ72.js.map
