{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js", "../../@arcgis/core/chunks/HUDMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{AlignPixel as e}from\"./AlignPixel.glsl.js\";import{terrainDepthTest as o}from\"../shading/TerrainDepthTest.glsl.js\";import{glsl as r}from\"../../shaderModules/glsl.js\";function i(i,t){const{vertex:s,fragment:p}=i;i.include(o,t),s.include(e),s.main.add(r`vec4 posProjCenter;\nif (dot(position, position) > 0.0) {\nProjectHUDAux projectAux;\nvec4 posProj = projectPositionHUD(projectAux);\nposProjCenter = alignToPixelCenter(posProj, viewport.zw);\nforwardViewPosDepth(projectAux.posView);\nvec3 vpos = projectAux.posModel;\nif (rejectBySlice(vpos)) {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\n} else {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\ngl_Position = posProjCenter;\ngl_PointSize = 1.0;`),p.main.add(r`fragColor = vec4(1);\nif(discardByTerrainDepth()) {\nfragColor.g = 0.5;\n}`)}export{i as HUDOcclusionPass};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{copy as e,set as o}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as i}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{ZEROS as r,fromValues as t}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{earth as l}from\"../geometry/support/Ellipsoid.js\";import{ShaderOutput as a}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{RejectBySlice as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{AlignPixel as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as u}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{HUDVisibility as f}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDVisibility.glsl.js\";import{OutputHighlight as p}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{ColorConversion as g}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as v}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as b,addScreenSizePerspective as h,addScreenSizePerspectiveAlignment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{addPixelRatio as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float2PassUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4BindUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4BindUniform.js\";import{Float4DrawUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4DrawUniform.js\";import{Float4PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatBindUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";import{FloatPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as A,If as O}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DBindUniform as $}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DBindUniform.js\";import{Texture2DPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{OITPass as T}from\"../views/3d/webgl-engine/lib/OITPass.js\";import{VertexAttribute as D}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{ShaderBuilder as E}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as L}from\"../webscene/support/AlphaCutoff.js\";function B(e){const i=new E,{signedDistanceFieldEnabled:B,occlusionTestEnabled:H,horizonCullingEnabled:V,pixelSnappingEnabled:_,hasScreenSizePerspective:q,debugDrawLabelBorder:k,vvSize:G,vvColor:N,hasRotation:Z,occludedFragmentFade:J,sampleSignedDistanceFieldTexelCenter:K}=e;i.include(d,e),i.vertex.include(s,e);const{occlusionPass:Q,output:W,oitPass:X}=e;if(Q)return i.include(u,e),i;const{vertex:Y,fragment:ee}=i;i.include(b),i.include(m,e),i.include(n,e),H&&i.include(f),ee.include(v),ee.include(g),i.varyings.add(\"vcolor\",\"vec4\"),i.varyings.add(\"vtc\",\"vec2\"),i.varyings.add(\"vsize\",\"vec2\");const oe=W===a.Highlight,ie=oe&&H;ie&&i.varyings.add(\"voccluded\",\"float\"),Y.uniforms.add(new P(\"viewport\",(e=>e.camera.fullViewport)),new C(\"screenOffset\",((e,i)=>o(R,2*e.screenOffset[0]*i.camera.pixelRatio,2*e.screenOffset[1]*i.camera.pixelRatio))),new C(\"anchorPosition\",(e=>M(e))),new S(\"materialColor\",(e=>e.color)),new y(\"materialRotation\",(e=>e.rotation)),new F(\"tex\",(e=>e.texture))),w(Y),B&&(Y.uniforms.add(new S(\"outlineColor\",(e=>e.outlineColor))),ee.uniforms.add(new S(\"outlineColor\",(e=>U(e)?e.outlineColor:r)),new y(\"outlineSize\",(e=>U(e)?e.outlineSize:0)))),V&&Y.uniforms.add(new z(\"pointDistanceSphere\",((e,o)=>{const i=o.camera.eye,r=e.origin;return t(r[0]-i[0],r[1]-i[1],r[2]-i[2],l.radius)}))),_&&Y.include(c),q&&(h(Y),x(Y)),k&&i.varyings.add(\"debugBorderCoords\",\"vec4\"),i.attributes.add(D.UVI,\"vec2\"),i.attributes.add(D.COLOR,\"vec4\"),i.attributes.add(D.SIZE,\"vec2\"),i.attributes.add(D.ROTATION,\"float\"),(G||N)&&i.attributes.add(D.FEATUREATTRIBUTE,\"vec4\"),Y.code.add(V?A`bool behindHorizon(vec3 posModel) {\nvec3 camToEarthCenter = pointDistanceSphere.xyz - localOrigin;\nvec3 camToPos = pointDistanceSphere.xyz + posModel;\nfloat earthRadius = pointDistanceSphere.w;\nfloat a = dot(camToPos, camToPos);\nfloat b = dot(camToPos, camToEarthCenter);\nfloat c = dot(camToEarthCenter, camToEarthCenter) - earthRadius * earthRadius;\nreturn b > 0.0 && b < a && b * b  > a * c;\n}`:A`bool behindHorizon(vec3 posModel) { return false; }`),Y.main.add(A`\n    ProjectHUDAux projectAux;\n    vec4 posProj = projectPositionHUD(projectAux);\n    forwardObjectAndLayerIdColor();\n\n    if (rejectBySlice(projectAux.posModel)) {\n      // Project outside of clip plane\n      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n      return;\n    }\n\n    if (behindHorizon(projectAux.posModel)) {\n      // Project outside of clip plane\n      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n      return;\n    }\n\n    vec2 inputSize;\n    ${O(q,A`\n        inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n        vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);`,A`\n        inputSize = size;\n        vec2 screenOffsetScaled = screenOffset;`)}\n    ${O(G,A`inputSize *= vvScale(featureAttribute).xx;`)}\n\n    vec2 combinedSize = inputSize * pixelRatio;\n    vec4 quadOffset = vec4(0.0);\n\n    ${O(H,A`\n    bool visible = testHUDVisibility(posProj);\n    if (!visible) {\n      vtc = vec2(0.0);\n      ${O(k,\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);\")}\n      return;\n    }`)}\n    ${O(ie,A`voccluded = visible ? 0.0 : 1.0;`)}\n  `);const re=A`\n      vec2 uvi1 = vec2(uvi.x < 0.0 ? 1.0 : 0.0, uvi.y < 0.0 ? 1.0 : 0.0);\n      vec2 uv = abs(uvi + uvi1);\n      vec2 texSize = vec2(textureSize(tex, 0));\n      uv.x = uv.x >= ${I} ? 1.0 : uv.x / texSize.x;\n      uv.y = uv.y >= ${I} ? 1.0 : uv.y / texSize.y;\n      quadOffset.xy = (uvi1 - anchorPosition) * 2.0 * combinedSize;\n\n      ${O(Z,A`\n          float angle = radians(materialRotation + rotation);\n          float cosAngle = cos(angle);\n          float sinAngle = sin(angle);\n          mat2 rotate = mat2(cosAngle, -sinAngle, sinAngle,  cosAngle);\n\n          quadOffset.xy = rotate * quadOffset.xy;\n        `)}\n\n      quadOffset.xy = (quadOffset.xy + screenOffsetScaled) / viewport.zw * posProj.w;\n  `,te=_?B?A`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:A`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:A`posProj += quadOffset;`;Y.main.add(A`\n    ${re}\n    ${N?\"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    ${O(W===a.ObjectAndLayerIdColor,A`vcolor.a = 1.0;`)}\n\n    bool alphaDiscard = vcolor.a < ${A.float(L)};\n    ${O(B,`alphaDiscard = alphaDiscard && outlineColor.a < ${A.float(L)};`)}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${te}\n      gl_Position = posProj;\n    }\n\n    vtc = uv;\n\n    ${O(k,A`debugBorderCoords = vec4(uv01, 1.5 / combinedSize);`)}\n    vsize = inputSize;\n  `),ee.uniforms.add(new F(\"tex\",(e=>e.texture))),J&&!oe&&ee.uniforms.add(new $(\"depthMap\",(e=>e.mainDepth)),new j(\"occludedOpacity\",(e=>e.hudOccludedFragmentOpacity)));const le=k?A`(isBorder > 0.0 ? 0.0 : ${A.float(L)})`:A.float(L),ae=A`\n    ${O(k,A`float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`)}\n\n    vec2 samplePos = vtc;\n\n    ${O(K,A`\n      float txSize = float(textureSize(tex, 0).x);\n      float texelSize = 1.0 / txSize;\n\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      samplePos += (vec2(1.0, -1.0) * texelSize) * scaleFactor;`)}\n\n    ${B?A`\n      vec4 fillPixelColor = vcolor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgbaTofloat(texture(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${le} ||\n          fillPixelColor.a + outlinePixelColor.a < ${A.float(L)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        ${O(!oe,A`fragColor = vec4(compositeColor, compositeAlpha);`)}\n      } else {\n        if (fillAlphaFactor < ${le}) {\n          discard;\n        }\n\n        ${O(!oe,A`fragColor = premultiplyAlpha(fillPixelColor);`)}\n      }\n\n      // visualize SDF:\n      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:A`\n          vec4 texColor = texture(tex, samplePos, -0.5);\n          if (texColor.a < ${le}) {\n            discard;\n          }\n          ${O(!oe,A`fragColor = texColor * premultiplyAlpha(vcolor);`)}\n          `}\n\n    ${O(J&&!oe,A`\n        float zSample = texelFetch(depthMap, ivec2(gl_FragCoord.xy), 0).x;\n        if (zSample < gl_FragCoord.z) {\n          fragColor *= occludedOpacity;\n        }\n        `)}\n\n    ${O(!oe&&k,A`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`)}\n  `;switch(W){case a.Color:case a.ColorEmission:i.outputs.add(\"fragColor\",\"vec4\",0),W===a.ColorEmission&&i.outputs.add(\"fragEmission\",\"vec4\",1),X===T.ColorAlpha&&i.outputs.add(\"fragAlpha\",\"float\",W===a.ColorEmission?2:1),ee.main.add(A`\n        ${ae}\n        ${O(X===T.FrontFace,A`fragColor.rgb /= fragColor.a;`)}\n        ${O(W===a.ColorEmission,A`fragEmission = vec4(0.0);`)}\n        ${O(X===T.ColorAlpha,A`fragAlpha = fragColor.a;`)}`);break;case a.ObjectAndLayerIdColor:ee.main.add(A`\n        ${ae}\n        outputObjectAndLayerIdColor();`);break;case a.Highlight:i.include(p,e),ee.main.add(A`\n        ${ae}\n        outputHighlight(${O(ie,A`voccluded == 1.0`,A`false`)});`)}return i}function U(e){return e.outlineColor[3]>0&&e.outlineSize>0}function M(o){return o.textureIsSignedDistanceField?H(o.anchorPosition,o.distanceFieldBoundingBox,R):e(R,o.anchorPosition),R}function H(e,i,r){o(r,e[0]*(i[2]-i[0])+i[0],e[1]*(i[3]-i[1])+i[1])}const R=i(),V=32e3,I=A.float(V),_=Object.freeze(Object.defineProperty({__proto__:null,build:B,calculateAnchorPosition:M,fullUV:V},Symbol.toStringTag,{value:\"Module\"}));export{_ as H,B as b,M as c,V as f};\n"],
  "mappings": "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",
  "names": ["i", "t", "s", "n", "e", "i", "B", "H", "V", "_", "s", "n", "t", "o", "r"]
}
