import {
  o,
  u
} from "./chunk-VJADDRRZ.js";
import {
  Be,
  Me,
  Pe,
  Ve
} from "./chunk-T2YIGHGA.js";
import "./chunk-WDDL5MIW.js";
import "./chunk-XKWGLDG7.js";
import "./chunk-VPFF3G33.js";
import "./chunk-RJMWK2VP.js";
import "./chunk-ZXYXNXJE.js";
import "./chunk-I7OUBN5N.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-2AYGXVZI.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import {
  L
} from "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/geometry/operators/json/intersectionOperator.js
function c(e, t) {
  const a = Pe(e), c2 = a.getSpatialReference();
  return Me(o(a.getGeometry(), Ve(t), c2), c2);
}
function i(r, o2) {
  const [c2, i2] = Be(r);
  return u(c2, Ve(o2), i2, 7).map(((e) => Me(e, i2))).filter(L);
}
export {
  c as execute,
  i as executeMany
};
//# sourceMappingURL=intersectionOperator-E43BSVR5.js.map
