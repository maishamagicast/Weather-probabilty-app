import {
  c,
  m as m2
} from "./chunk-MGA7XBRB.js";
import {
  l
} from "./chunk-XNUSHDFN.js";
import {
  r as r2
} from "./chunk-APMQAZ5Z.js";
import {
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2
} from "./chunk-S62CSPIH.js";
import {
  o
} from "./chunk-XNYPRDKK.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import {
  a
} from "./chunk-TJPLHZCD.js";

// node_modules/@arcgis/core/symbols/FillSymbol.js
var l2 = class extends c {
  constructor(e) {
    super(e), this.outline = null, this.type = null;
  }
  hash() {
    return `${this.type}.${this.outline?.hash()}`;
  }
};
r([m({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": m2 } }, json: { default: null, write: true } })], l2.prototype, "outline", void 0), r([m({ type: ["simple-fill", "picture-fill"], readOnly: true })], l2.prototype, "type", void 0), l2 = r([a2("esri.symbols.FillSymbol")], l2);

// node_modules/@arcgis/core/symbols/SimpleFillSymbol.js
var p;
var c2 = new o({ esriSFSSolid: "solid", esriSFSNull: "none", esriSFSHorizontal: "horizontal", esriSFSVertical: "vertical", esriSFSForwardDiagonal: "forward-diagonal", esriSFSBackwardDiagonal: "backward-diagonal", esriSFSCross: "cross", esriSFSDiagonalCross: "diagonal-cross" });
var m3 = p = class extends l2 {
  constructor(...o2) {
    super(...o2), this.color = new l([0, 0, 0, 0.25]), this.outline = new m2(), this.type = "simple-fill", this.style = "solid";
  }
  normalizeCtorArgs(o2, r3, s) {
    if (o2 && "string" != typeof o2) return o2;
    const e = {};
    return o2 && (e.style = o2), r3 && (e.outline = r3), s && (e.color = s), e;
  }
  clone() {
    return new p({ color: a(this.color), outline: this.outline && this.outline.clone(), style: this.style });
  }
  hash() {
    return `${super.hash()}${this.style}.${this.color && this.color.hash()}`;
  }
};
r([m()], m3.prototype, "color", void 0), r([m()], m3.prototype, "outline", void 0), r([r2({ esriSFS: "simple-fill" }, { readOnly: true })], m3.prototype, "type", void 0), r([m({ type: c2.apiValues, json: { read: c2.read, write: c2.write } })], m3.prototype, "style", void 0), m3 = p = r([a2("esri.symbols.SimpleFillSymbol")], m3);

export {
  l2 as l,
  m3 as m
};
//# sourceMappingURL=chunk-CHAHOTAY.js.map
