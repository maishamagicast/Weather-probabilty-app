import {
  a as a3,
  c as c3,
  i as i2
} from "./chunk-YYLIW24Q.js";
import {
  u
} from "./chunk-BLBN3L5Q.js";
import {
  f as f2,
  p,
  z
} from "./chunk-CBXZL53X.js";
import {
  _,
  c as c2,
  y
} from "./chunk-SMO33YG7.js";
import {
  f
} from "./chunk-LCBAL6ER.js";
import {
  r as r2
} from "./chunk-CL7VLXUR.js";
import {
  c,
  m2 as m
} from "./chunk-2ZPU5IZX.js";
import {
  a2
} from "./chunk-S62CSPIH.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import {
  a,
  i3 as i
} from "./chunk-TJPLHZCD.js";
import {
  h
} from "./chunk-KLFJ5V5G.js";

// node_modules/@arcgis/core/geometry/support/zmUtils.js
function h2(h7, a6, s4 = false) {
  let { hasM: t4, hasZ: e3 } = h7;
  Array.isArray(a6) ? 4 !== a6.length || t4 || e3 ? 3 === a6.length && s4 && !t4 ? (e3 = true, t4 = false) : 3 === a6.length && t4 && e3 && (t4 = false, e3 = false) : (t4 = true, e3 = true) : (e3 = !e3 && a6.hasZ && (!t4 || a6.hasM), t4 = !t4 && a6.hasM && (!e3 || a6.hasZ)), h7.hasZ = e3, h7.hasM = t4;
}

// node_modules/@arcgis/core/geometry/Multipoint.js
var h3;
function l(t4) {
  return (s4, e3) => null == s4 ? e3 : null == e3 ? s4 : t4(s4, e3);
}
function c4(t4) {
  return t4 && ("esri.geometry.SpatialReference" === t4.declaredClass || null != t4.wkid);
}
var m2 = h3 = class extends c2 {
  constructor(...t4) {
    super(...t4), this.points = [], this.type = "multipoint";
  }
  normalizeCtorArgs(t4, s4) {
    if (!t4 && !s4) return {};
    const e3 = {};
    Array.isArray(t4) ? (e3.points = t4, e3.spatialReference = s4) : c4(t4) ? e3.spatialReference = t4 : (t4.points && (e3.points = t4.points), t4.spatialReference && (e3.spatialReference = t4.spatialReference), t4.hasZ && (e3.hasZ = t4.hasZ), t4.hasM && (e3.hasM = t4.hasM));
    const i5 = e3.points?.[0];
    return i5 && (void 0 === e3.hasZ && void 0 === e3.hasM ? (e3.hasZ = i5.length > 2, e3.hasM = false) : void 0 === e3.hasZ ? e3.hasZ = i5.length > 3 : void 0 === e3.hasM && (e3.hasM = i5.length > 3)), e3;
  }
  get cache() {
    return this.commitProperty("points"), this.commitProperty("hasZ"), this.commitProperty("hasM"), this.commitProperty("spatialReference"), {};
  }
  get extent() {
    const t4 = this.points;
    if (!t4.length) return null;
    const s4 = new z(), e3 = this.hasZ, i5 = this.hasM, r6 = e3 ? 3 : 2, n2 = t4[0], a6 = l(Math.min), p2 = l(Math.max);
    let h7, c9, m6, u6, [f7, y4] = n2, [d2, g2] = n2;
    for (let o4 = 0, l5 = t4.length; o4 < l5; o4++) {
      const s5 = t4[o4], [n3, l6] = s5;
      if (f7 = a6(f7, n3), y4 = a6(y4, l6), d2 = p2(d2, n3), g2 = p2(g2, l6), e3 && s5.length > 2) {
        const t5 = s5[2];
        h7 = a6(h7, t5), m6 = p2(m6, t5);
      }
      if (i5 && s5.length > r6) {
        const t5 = s5[r6];
        c9 = a6(c9, t5), u6 = p2(u6, t5);
      }
    }
    return s4.xmin = f7, s4.ymin = y4, s4.xmax = d2, s4.ymax = g2, s4.spatialReference = this.spatialReference, e3 ? (s4.zmin = h7, s4.zmax = m6) : (s4.zmin = void 0, s4.zmax = void 0), i5 ? (s4.mmin = c9, s4.mmax = u6) : (s4.mmin = void 0, s4.mmax = void 0), s4;
  }
  writePoints(t4, e3) {
    e3.points = a(this.points);
  }
  addPoint(t4) {
    return h2(this, t4), Array.isArray(t4) ? this.points.push(t4) : this.points.push(t4.toArray()), this.notifyChange("points"), this;
  }
  clone() {
    const t4 = { points: a(this.points), spatialReference: this.spatialReference };
    return this.hasZ && (t4.hasZ = true), this.hasM && (t4.hasM = true), new h3(t4);
  }
  getPoint(t4) {
    if (!this._validateInputs(t4)) return null;
    const s4 = this.points[t4], e3 = { x: s4[0], y: s4[1], spatialReference: this.spatialReference };
    let i5 = 2;
    return this.hasZ && (e3.z = s4[2], i5 = 3), this.hasM && (e3.m = s4[i5]), new _(e3);
  }
  removePoint(t4) {
    if (!this._validateInputs(t4)) return null;
    const s4 = new _(this.points.splice(t4, 1)[0], this.spatialReference);
    return this.notifyChange("points"), s4;
  }
  setPoint(t4, s4) {
    return this._validateInputs(t4) ? (h2(this, s4), Array.isArray(s4) || (s4 = s4.toArray()), this.points[t4] = s4, this.notifyChange("points"), this) : this;
  }
  toJSON(t4) {
    return this.write({}, t4);
  }
  _validateInputs(t4) {
    return null != t4 && t4 >= 0 && t4 < this.points.length;
  }
};
r([m({ readOnly: true })], m2.prototype, "cache", null), r([m()], m2.prototype, "extent", null), r([m({ type: [[Number]], json: { write: { isRequired: true } } })], m2.prototype, "points", void 0), r([r2("points")], m2.prototype, "writePoints", null), m2 = h3 = r([a2("esri.geometry.Multipoint")], m2), m2.prototype.toJSON.isDefaultToJSON = true;

// node_modules/@arcgis/core/geometry/support/boundsUtils.js
function t(n2) {
  return void 0 !== n2.xmin && void 0 !== n2.ymin && void 0 !== n2.xmax && void 0 !== n2.ymax;
}
function i3(n2) {
  return void 0 !== n2.points;
}
function o(n2) {
  return void 0 !== n2.x && void 0 !== n2.y;
}
function e(n2) {
  return void 0 !== n2.paths;
}
function r3(n2) {
  return void 0 !== n2.rings;
}
function u2(n2) {
  function t4(t5, i5) {
    return null == t5 ? i5 : null == i5 ? t5 : n2(t5, i5);
  }
  return t4;
}
var l2 = u2(Math.min);
var h4 = u2(Math.max);
function a4(n2, u6) {
  return e(u6) ? x(n2, u6.paths, false, false) : r3(u6) ? x(n2, u6.rings, false, false) : i3(u6) ? g(n2, u6.points, false, false, false, false) : t(u6) ? s(n2, u6) : (o(u6) && (n2[0] = u6.x, n2[1] = u6.y, n2[2] = u6.x, n2[3] = u6.y), n2);
}
function c5(t4) {
  let i5, o4, e3, r6;
  for (t4.reset(), i5 = e3 = 1 / 0, o4 = r6 = -1 / 0; t4.nextPath(); ) {
    const n2 = f3(t4);
    i5 = Math.min(n2[0], i5), e3 = Math.min(n2[1], e3), o4 = Math.max(n2[2], o4), r6 = Math.max(n2[3], r6);
  }
  return u([i5, e3, o4, r6]);
}
function f3(t4) {
  let i5, o4, e3, r6;
  for (i5 = e3 = 1 / 0, o4 = r6 = -1 / 0; t4.nextPoint(); ) i5 = Math.min(t4.x, i5), e3 = Math.min(t4.y, e3), o4 = Math.max(t4.x, o4), r6 = Math.max(t4.y, r6);
  return u([i5, e3, o4, r6]);
}
function m3(n2, u6) {
  return e(u6) ? x(n2, u6.paths, true, false) : r3(u6) ? x(n2, u6.rings, true, false) : i3(u6) ? g(n2, u6.points, true, false, true, false) : t(u6) ? s(n2, u6, true, false, true, false) : (o(u6) && (n2[0] = u6.x, n2[1] = u6.y, n2[2] = u6.z, n2[3] = u6.x, n2[4] = u6.y, n2[5] = u6.z), n2);
}
function x(n2, t4, i5, o4) {
  const e3 = i5 ? 3 : 2;
  if (!t4.length || !t4[0].length) return null;
  let r6, u6, a6, c9, [f7, m6] = t4[0][0], [x5, s4] = t4[0][0];
  for (let g2 = 0; g2 < t4.length; g2++) {
    const n3 = t4[g2];
    for (let t5 = 0; t5 < n3.length; t5++) {
      const g3 = n3[t5], [y4, d2] = g3;
      if (f7 = l2(f7, y4), m6 = l2(m6, d2), x5 = h4(x5, y4), s4 = h4(s4, d2), i5 && g3.length > 2) {
        const n4 = g3[2];
        r6 = l2(r6, n4), u6 = h4(u6, n4);
      }
      if (o4 && g3.length > e3) {
        const n4 = g3[e3];
        a6 = l2(r6, n4), c9 = h4(u6, n4);
      }
    }
  }
  return i5 ? o4 ? (n2[0] = f7, n2[1] = m6, n2[2] = r6, n2[3] = a6, n2[4] = x5, n2[5] = s4, n2[6] = u6, n2[7] = c9, n2.length = 8, n2) : (n2[0] = f7, n2[1] = m6, n2[2] = r6, n2[3] = x5, n2[4] = s4, n2[5] = u6, n2.length = 6, n2) : o4 ? (n2[0] = f7, n2[1] = m6, n2[2] = a6, n2[3] = x5, n2[4] = s4, n2[5] = c9, n2.length = 6, n2) : (n2[0] = f7, n2[1] = m6, n2[2] = x5, n2[3] = s4, n2.length = 4, n2);
}
function s(n2, t4, i5, o4, e3, r6) {
  const u6 = t4.xmin, l5 = t4.xmax, h7 = t4.ymin, a6 = t4.ymax;
  let c9 = t4.zmin, f7 = t4.zmax, m6 = t4.mmin, x5 = t4.mmax;
  return e3 ? (c9 = c9 || 0, f7 = f7 || 0, r6 ? (m6 = m6 || 0, x5 = x5 || 0, n2[0] = u6, n2[1] = h7, n2[2] = c9, n2[3] = m6, n2[4] = l5, n2[5] = a6, n2[6] = f7, n2[7] = x5, n2) : (n2[0] = u6, n2[1] = h7, n2[2] = c9, n2[3] = l5, n2[4] = a6, n2[5] = f7, n2)) : r6 ? (m6 = m6 || 0, x5 = x5 || 0, n2[0] = u6, n2[1] = h7, n2[2] = m6, n2[3] = l5, n2[4] = a6, n2[5] = x5, n2) : (n2[0] = u6, n2[1] = h7, n2[2] = l5, n2[3] = a6, n2);
}
function g(n2, t4, i5, o4, e3, r6) {
  const u6 = i5 ? 3 : 2, a6 = o4 && r6, c9 = i5 && e3;
  if (!t4.length || !t4[0].length) return null;
  let f7, m6, x5, s4, [g2, y4] = t4[0], [d2, M] = t4[0];
  for (let v3 = 0; v3 < t4.length; v3++) {
    const n3 = t4[v3], [i6, o5] = n3;
    if (g2 = l2(g2, i6), y4 = l2(y4, o5), d2 = h4(d2, i6), M = h4(M, o5), c9 && n3.length > 2) {
      const t5 = n3[2];
      f7 = l2(f7, t5), m6 = h4(m6, t5);
    }
    if (a6 && n3.length > u6) {
      const t5 = n3[u6];
      x5 = l2(f7, t5), s4 = h4(m6, t5);
    }
  }
  return e3 ? (f7 = f7 || 0, m6 = m6 || 0, r6 ? (x5 = x5 || 0, s4 = s4 || 0, n2[0] = g2, n2[1] = y4, n2[2] = f7, n2[3] = x5, n2[4] = d2, n2[5] = M, n2[6] = m6, n2[7] = s4, n2) : (n2[0] = g2, n2[1] = y4, n2[2] = f7, n2[3] = d2, n2[4] = M, n2[5] = m6, n2)) : r6 ? (x5 = x5 || 0, s4 = s4 || 0, n2[0] = g2, n2[1] = y4, n2[2] = x5, n2[3] = d2, n2[4] = M, n2[5] = s4, n2) : (n2[0] = g2, n2[1] = y4, n2[2] = d2, n2[3] = M, n2);
}

// node_modules/@arcgis/core/geometry/geometryCursorCollectUtils.js
function t2(t4) {
  const n2 = [];
  for (t4.reset(); t4.nextPath(); ) {
    const e3 = [];
    for (; t4.nextPoint(); ) e3.push([t4.x, t4.y]);
    n2.push(e3);
  }
  return t4.reset(), n2;
}
function n(t4) {
  const n2 = [];
  for (; t4.nextPoint(); ) n2.push([t4.x, t4.y]);
  return t4.seekPathStart(), n2;
}

// node_modules/@arcgis/core/geometry/support/centroid.js
function r4(t4) {
  return t4 ? t4.hasZ ? [t4.xmax - t4.xmin / 2, t4.ymax - t4.ymin / 2, t4.zmax - t4.zmin / 2] : [t4.xmax - t4.xmin / 2, t4.ymax - t4.ymin / 2] : null;
}
function l3(t4) {
  return t4 ? o2(t4.rings, t4.hasZ ?? false) : null;
}
function o2(t4, n2) {
  if (!t4?.length) return null;
  const e3 = [], r6 = [], l5 = n2 ? [1 / 0, -1 / 0, 1 / 0, -1 / 0, 1 / 0, -1 / 0] : [1 / 0, -1 / 0, 1 / 0, -1 / 0];
  for (let o4 = 0, i5 = t4.length; o4 < i5; o4++) {
    const e4 = u3(t4[o4], n2, l5);
    e4 && r6.push(e4);
  }
  if (r6.sort(((t5, e4) => {
    let r7 = t5[2] - e4[2];
    return 0 === r7 && n2 && (r7 = t5[4] - e4[4]), r7;
  })), r6.length && (e3[0] = r6[0][0], e3[1] = r6[0][1], n2 && (e3[2] = r6[0][3]), (e3[0] < l5[0] || e3[0] > l5[1] || e3[1] < l5[2] || e3[1] > l5[3] || n2 && (e3[2] < l5[4] || e3[2] > l5[5])) && (e3.length = 0)), !e3.length) {
    const r7 = t4[0] && t4[0].length ? s2(t4[0], n2) : null;
    if (!r7) return null;
    e3[0] = r7[0], e3[1] = r7[1], n2 && r7.length > 2 && (e3[2] = r7[2]);
  }
  return e3;
}
function u3(t4, n2, e3) {
  let r6 = 0, l5 = 0, o4 = 0, u6 = 0, i5 = 0;
  const s4 = t4.length ? t4[0][0] : 0, I2 = t4.length ? t4[0][1] : 0, h7 = t4.length && n2 ? t4[0][2] : 0;
  for (let f7 = 0; f7 < t4.length; f7++) {
    const c10 = t4[f7], N2 = t4[(f7 + 1) % t4.length], [x5, g2, a6] = c10, m6 = x5 - s4, P2 = g2 - I2, [T, y4, E] = N2, S = T - s4, p2 = y4 - I2, z2 = m6 * p2 - S * P2;
    if (u6 += z2, r6 += (m6 + S) * z2, l5 += (P2 + p2) * z2, n2 && c10.length > 2 && N2.length > 2) {
      const t5 = a6 - h7, n3 = E - h7, e4 = m6 * n3 - S * t5;
      o4 += (t5 + n3) * e4, i5 += e4;
    }
    x5 < e3[0] && (e3[0] = x5), x5 > e3[1] && (e3[1] = x5), g2 < e3[2] && (e3[2] = g2), g2 > e3[3] && (e3[3] = g2), n2 && (a6 < e3[4] && (e3[4] = a6), a6 > e3[5] && (e3[5] = a6));
  }
  if (u6 > 0 && (u6 *= -1), i5 > 0 && (i5 *= -1), !u6) return null;
  u6 *= 0.5, i5 *= 0.5;
  const c9 = [r6 / (6 * u6) + s4, l5 / (6 * u6) + I2, u6];
  return n2 && (e3[4] === e3[5] || 0 === i5 ? (c9[3] = (e3[4] + e3[5]) / 2, c9[4] = 0) : (c9[3] = o4 / (6 * i5) + h7, c9[4] = i5)), c9;
}
function i4(t4, n2) {
  let e3 = 0, r6 = 0, l5 = 0;
  t4.nextPoint();
  const o4 = t4.pathSize ? t4.x : 0, u6 = t4.pathSize ? t4.y : 0;
  for (let i5 = 0; i5 < t4.pathSize; i5++) {
    t4.seekInPath(i5);
    const s4 = [t4.x, t4.y];
    t4.seekInPath((i5 + 1) % t4.pathSize);
    const I2 = [t4.x, t4.y], [h7, c9] = s4, f7 = h7 - o4, N2 = c9 - u6, [x5, g2] = I2, a6 = x5 - o4, m6 = g2 - u6, P2 = f7 * m6 - a6 * N2;
    l5 += P2, e3 += (f7 + a6) * P2, r6 += (N2 + m6) * P2, h7 < n2[0] && (n2[0] = h7), h7 > n2[1] && (n2[1] = h7), c9 < n2[2] && (n2[2] = c9), c9 > n2[3] && (n2[3] = c9);
  }
  if (l5 > 0 && (l5 *= -1), !l5) return null;
  l5 *= 0.5;
  return [e3 / (6 * l5) + o4, r6 / (6 * l5) + u6, l5];
}
function s2(t4, r6) {
  const l5 = r6 ? [0, 0, 0] : [0, 0], o4 = r6 ? [0, 0, 0] : [0, 0];
  let u6 = 0, i5 = 0, s4 = 0, I2 = 0;
  for (let h7 = 0, c9 = t4.length; h7 < c9 - 1; h7++) {
    const c10 = t4[h7], f7 = t4[h7 + 1];
    if (c10 && f7) {
      l5[0] = c10[0], l5[1] = c10[1], o4[0] = f7[0], o4[1] = f7[1], r6 && c10.length > 2 && f7.length > 2 && (l5[2] = c10[2], o4[2] = f7[2]);
      const t5 = i2(l5, o4);
      if (t5) {
        u6 += t5;
        const e3 = c3(c10, f7);
        i5 += t5 * e3[0], s4 += t5 * e3[1], r6 && e3.length > 2 && (I2 += t5 * e3[2]);
      }
    }
  }
  return u6 > 0 ? r6 ? [i5 / u6, s4 / u6, I2 / u6] : [i5 / u6, s4 / u6] : t4.length ? t4[0] : null;
}
function I(n2) {
  const { hasZ: e3, totalSize: r6 } = n2;
  if (0 === r6) return null;
  const l5 = [], o4 = [], i5 = e3 ? [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY] : [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];
  for (n2.reset(); n2.nextPath(); ) {
    const e4 = u3(n(n2), n2.hasZ, i5);
    e4 && o4.push(e4);
  }
  if (o4.sort(((t4, n3) => {
    let r7 = t4[2] - n3[2];
    return 0 === r7 && e3 && (r7 = t4[4] - n3[4]), r7;
  })), o4.length && (l5[0] = o4[0][0], l5[1] = o4[0][1], e3 && (l5[2] = o4[0][3]), (l5[0] < i5[0] || l5[0] > i5[1] || l5[1] < i5[2] || l5[1] > i5[3] || e3 && (l5[2] < i5[4] || l5[2] > i5[5])) && (l5.length = 0)), !l5.length) {
    n2.reset(), n2.nextPath();
    const t4 = n2.pathSize ? h5(n2) : null;
    if (!t4) return null;
    l5[0] = t4[0], l5[1] = t4[1], e3 && t4.length > 2 && (l5[2] = t4[2]);
  }
  return l5;
}
function h5(t4) {
  const { hasZ: r6 } = t4, l5 = r6 ? [0, 0, 0] : [0, 0], o4 = r6 ? [0, 0, 0] : [0, 0];
  let u6 = 0, i5 = 0, s4 = 0, I2 = 0;
  if (t4.nextPoint()) {
    let h7 = t4.x, c9 = t4.y, f7 = t4.z;
    for (; t4.nextPoint(); ) {
      const N2 = t4.x, x5 = t4.y, g2 = t4.z;
      l5[0] = h7, l5[1] = c9, o4[0] = N2, o4[1] = x5, r6 && (l5[2] = f7, o4[2] = g2);
      const a6 = i2(l5, o4);
      if (a6) {
        u6 += a6;
        const t5 = c3(l5, o4);
        i5 += a6 * t5[0], s4 += a6 * t5[1], r6 && t5.length > 2 && (I2 += a6 * t5[2]);
      }
      h7 = N2, c9 = x5, f7 = g2;
    }
  }
  return u6 > 0 ? r6 ? [i5 / u6, s4 / u6, I2 / u6] : [i5 / u6, s4 / u6] : t4.pathSize ? (t4.seekPathStart(), t4.nextPoint(), [t4.x, t4.y]) : null;
}
var c6 = 1e-6;
function f4(t4) {
  let n2 = 0;
  for (t4.reset(); t4.nextPath(); ) n2 += t4.getCurrentRingArea();
  if (n2 < c6) {
    const n3 = I(t4);
    return n3 ? [n3[0], n3[1]] : null;
  }
  const e3 = [0, 0];
  if (t4.reset(), !t4.nextPath() || !t4.nextPoint()) return null;
  const r6 = [t4.x, t4.y];
  for (t4.reset(); t4.nextPath(); ) x2(e3, r6, t4);
  return e3[0] *= 1 / n2, e3[1] *= 1 / n2, e3[0] += r6[0], e3[1] += r6[1], e3;
}
var N = 1 / 3;
function x2(t4, n2, e3) {
  if (!t4 || !e3 || e3.pathSize < 3) return null;
  e3.nextPoint();
  const r6 = e3.x, l5 = e3.y;
  e3.nextPoint();
  let o4, u6 = e3.x - r6, i5 = e3.y - l5, s4 = 0, I2 = 0;
  for (; e3.nextPoint(); ) s4 = e3.x - r6, I2 = e3.y - l5, o4 = 0.5 * N * (s4 * i5 - I2 * u6), t4[0] += o4 * (u6 + s4), t4[1] += o4 * (i5 + I2), u6 = s4, i5 = I2;
  const h7 = e3.getCurrentRingArea(), c9 = [r6, l5];
  return c9[0] -= n2[0], c9[1] -= n2[1], c9[0] *= h7, c9[1] *= h7, t4[0] += c9[0], t4[1] += c9[1], t4;
}

// node_modules/@arcgis/core/geometry/support/extentUtils.js
function t3(n2) {
  return void 0 !== n2.xmin && void 0 !== n2.ymin && void 0 !== n2.xmax && void 0 !== n2.ymax;
}
function u4(n2) {
  return void 0 !== n2.points;
}
function m4(n2) {
  return void 0 !== n2.x && void 0 !== n2.y;
}
function o3(n2) {
  return void 0 !== n2.paths;
}
function r5(n2) {
  return void 0 !== n2.rings;
}
var x3 = [];
function a5(n2, i5, t4, u6) {
  return { xmin: n2, ymin: i5, xmax: t4, ymax: u6 };
}
function c7(n2, i5, t4, u6, m6, o4) {
  return { xmin: n2, ymin: i5, zmin: t4, xmax: u6, ymax: m6, zmax: o4 };
}
function s3(n2, i5, t4, u6, m6, o4) {
  return { xmin: n2, ymin: i5, mmin: t4, xmax: u6, ymax: m6, mmax: o4 };
}
function e2(n2, i5, t4, u6, m6, o4, r6, x5) {
  return { xmin: n2, ymin: i5, zmin: t4, mmin: u6, xmax: m6, ymax: o4, zmax: r6, mmax: x5 };
}
function f5(n2, i5 = false, t4 = false) {
  return i5 ? t4 ? e2(n2[0], n2[1], n2[2], n2[3], n2[4], n2[5], n2[6], n2[7]) : c7(n2[0], n2[1], n2[2], n2[3], n2[4], n2[5]) : t4 ? s3(n2[0], n2[1], n2[2], n2[3], n2[4], n2[5]) : a5(n2[0], n2[1], n2[2], n2[3]);
}
function l4(n2) {
  return n2 ? t3(n2) ? n2 : m4(n2) ? d(n2) : r5(n2) ? v(n2) : o3(n2) ? h6(n2) : u4(n2) ? y2(n2) : null : null;
}
function y2(n2) {
  const { hasZ: t4, hasM: u6, points: m6 } = n2;
  return f5(g(x3, m6, t4 ?? false, u6 ?? false), t4, u6);
}
function d(n2) {
  const { x: i5, y: t4, z: u6, m: m6 } = n2, o4 = null != m6;
  return null != u6 ? o4 ? e2(i5, t4, u6, m6, i5, t4, u6, m6) : c7(i5, t4, u6, i5, t4, u6) : o4 ? s3(i5, t4, m6, i5, t4, m6) : a5(i5, t4, i5, t4);
}
function v(i5) {
  const { hasZ: t4, hasM: u6, rings: m6 } = i5, o4 = x(x3, m6, t4 ?? false, u6 ?? false);
  return o4 ? f5(o4, t4, u6) : null;
}
function h6(i5) {
  const { hasZ: t4, hasM: u6, paths: m6 } = i5, o4 = x(x3, m6, t4 ?? false, u6 ?? false);
  return o4 ? f5(o4, t4, u6) : null;
}

// node_modules/@arcgis/core/geometry/Polygon.js
var w;
function v2(t4) {
  return !Array.isArray(t4[0]);
}
function j(t4) {
  return "number" == typeof t4[0]?.[0];
}
function x4(t4) {
  if (!t4) return;
  let { rings: e3, hasM: r6, hasZ: s4, spatialReference: i5 } = t4;
  switch (e3 ??= [], j(e3) && (e3 = [e3]), e3[0]?.[0]?.length) {
    case 4:
      s4 ??= true, r6 ??= true;
      break;
    case 3:
      s4 ??= true !== r6, r6 ??= !s4;
      break;
    default:
      s4 ??= false, r6 ??= false;
  }
  return i5 ??= f.WGS84, { ...t4, hasM: r6, hasZ: s4, rings: e3, spatialReference: i5 };
}
var P = w = class extends c2 {
  static fromExtent(t4) {
    const e3 = t4.clone().normalize(), { spatialReference: r6 } = t4;
    let s4 = false, i5 = false;
    for (const o4 of e3) o4.hasZ && (s4 = true), o4.hasM && (i5 = true);
    const n2 = { rings: e3.map(((t5) => {
      const e4 = [[t5.xmin, t5.ymin], [t5.xmin, t5.ymax], [t5.xmax, t5.ymax], [t5.xmax, t5.ymin], [t5.xmin, t5.ymin]];
      if (s4 && t5.hasZ) {
        const r7 = t5.zmin + 0.5 * (t5.zmax - t5.zmin);
        for (let t6 = 0; t6 < e4.length; t6++) e4[t6].push(r7);
      }
      if (i5 && t5.hasM) {
        const r7 = t5.mmin + 0.5 * (t5.mmax - t5.mmin);
        for (let t6 = 0; t6 < e4.length; t6++) e4[t6].push(r7);
      }
      return e4;
    })), spatialReference: r6 };
    return s4 && (n2.hasZ = true), i5 && (n2.hasM = true), new w(n2);
  }
  constructor(t4) {
    super(x4(t4)), this.curveRings = void 0, this.rings = [], this.type = "polygon";
  }
  get cache() {
    return this.commitProperty("curveRings"), this.commitProperty("hasM"), this.commitProperty("hasZ"), this.commitProperty("rings"), this.commitProperty("spatialReference"), {};
  }
  get centroid() {
    const t4 = l3(this);
    if (!t4 || isNaN(t4[0]) || isNaN(t4[1]) || this.hasZ && isNaN(t4[2])) return null;
    const e3 = new _();
    return e3.x = t4[0], e3.y = t4[1], e3.spatialReference = this.spatialReference, this.hasZ && (e3.z = t4[2]), e3;
  }
  writeCurveRings(t4, e3) {
    e3.curveRings = a(t4);
  }
  get extent() {
    const t4 = v(this), { spatialReference: e3 } = this;
    return t4 ? new z({ ...t4, spatialReference: e3 }) : null;
  }
  get isSelfIntersecting() {
    return c(i.getLogger(this), "isSelfIntersecting", { replacement: "Please use simplifyOperator.isSimple() instead.", version: "4.33", warnOnce: true }), p(this.rings);
  }
  writeRings(t4, e3) {
    e3.rings = a(this.rings);
  }
  addRing(t4) {
    if (!t4) return;
    const e3 = this.rings, r6 = e3.length;
    if (v2(t4)) {
      const s4 = [];
      for (let e4 = 0, r7 = t4.length; e4 < r7; e4++) s4[e4] = t4[e4].toArray();
      e3[r6] = s4;
    } else e3[r6] = t4.slice();
    return this.notifyChange("rings"), this;
  }
  clone() {
    const t4 = new w();
    return t4.spatialReference = this.spatialReference, t4.rings = a(this.rings), t4.curveRings = a(this.curveRings), t4.hasZ = this.hasZ, t4.hasM = this.hasM, t4;
  }
  equals(t4) {
    if (this === t4) return true;
    if (null == t4) return false;
    const r6 = this.spatialReference, s4 = t4.spatialReference;
    if (null != r6 != (null != s4)) return false;
    if (null != r6 && null != s4 && !r6.equals(s4)) return false;
    if (this.rings.length !== t4.rings.length) return false;
    const i5 = ([t5, e3, r7, s5], [i6, n2, o4, a6]) => t5 === i6 && e3 === n2 && (null == r7 && null == o4 || r7 === o4) && (null == s5 && null == a6 || s5 === a6);
    for (let n2 = 0; n2 < this.rings.length; n2++) {
      const r7 = this.rings[n2], s5 = t4.rings[n2];
      if (!h(r7, s5, i5)) return false;
    }
    return true;
  }
  contains(t4) {
    if (!t4) return false;
    const e3 = y(t4, this.spatialReference);
    return f2(this, null != e3 ? e3 : t4);
  }
  isClockwise(t4) {
    const e3 = v2(t4) ? t4.map(((t5) => this.hasZ ? this.hasM ? [t5.x, t5.y, t5.z, t5.m] : [t5.x, t5.y, t5.z] : [t5.x, t5.y])) : t4;
    return a3(e3);
  }
  getPoint(t4, e3) {
    if (!this._validateInputs(t4, e3)) return null;
    const r6 = this.rings[t4][e3], s4 = this.hasZ, i5 = this.hasM;
    return s4 && !i5 ? new _(r6[0], r6[1], r6[2], void 0, this.spatialReference) : i5 && !s4 ? new _(r6[0], r6[1], void 0, r6[2], this.spatialReference) : s4 && i5 ? new _(r6[0], r6[1], r6[2], r6[3], this.spatialReference) : new _(r6[0], r6[1], this.spatialReference);
  }
  insertPoint(t4, e3, r6) {
    return this._validateInputs(t4, e3, true) ? (h2(this, r6), Array.isArray(r6) || (r6 = r6.toArray()), this.rings[t4].splice(e3, 0, r6), this.notifyChange("rings"), this) : this;
  }
  removePoint(t4, e3) {
    if (!this._validateInputs(t4, e3)) return null;
    const r6 = new _(this.rings[t4].splice(e3, 1)[0], this.spatialReference);
    return this.notifyChange("rings"), r6;
  }
  removeRing(t4) {
    if (!this._validateInputs(t4, null)) return null;
    const e3 = this.rings.splice(t4, 1)[0], r6 = this.spatialReference, s4 = e3.map(((t5) => new _(t5, r6)));
    return this.notifyChange("rings"), s4;
  }
  setPoint(t4, e3, r6) {
    return this._validateInputs(t4, e3) ? (h2(this, r6), Array.isArray(r6) || (r6 = r6.toArray()), this.rings[t4][e3] = r6, this.notifyChange("rings"), this) : this;
  }
  _validateInputs(t4, e3, r6 = false) {
    if (null == t4 || t4 < 0 || t4 >= this.rings.length) return false;
    if (null != e3) {
      const s4 = this.rings[t4];
      if (r6 && (e3 < 0 || e3 > s4.length)) return false;
      if (!r6 && (e3 < 0 || e3 >= s4.length)) return false;
    }
    return true;
  }
  toJSON(t4) {
    return this.write({}, t4);
  }
};
r([m({ readOnly: true })], P.prototype, "cache", null), r([m({ readOnly: true })], P.prototype, "centroid", null), r([m({ json: { write: true, origins: { "portal-item": { write: false }, "web-map": { write: false }, "web-scene": { write: false } } } })], P.prototype, "curveRings", void 0), r([r2("curveRings")], P.prototype, "writeCurveRings", null), r([m({ readOnly: true })], P.prototype, "extent", null), r([m({ readOnly: true })], P.prototype, "isSelfIntersecting", null), r([m({ type: [[[Number]]], json: { write: { isRequired: true } } })], P.prototype, "rings", void 0), r([r2("rings")], P.prototype, "writeRings", null), P = w = r([a2("esri.geometry.Polygon")], P), P.prototype.toJSON.isDefaultToJSON = true;

// node_modules/@arcgis/core/geometry/Polyline.js
var c8;
function u5(t4) {
  return !Array.isArray(t4[0]);
}
function f6(t4) {
  return "number" == typeof t4[0]?.[0];
}
function m5(t4) {
  if (!t4) return;
  let { paths: e3, hasM: s4, hasZ: r6, spatialReference: i5 } = t4;
  switch (e3 ??= [], f6(e3) && (e3 = [e3]), e3[0]?.[0]?.length) {
    case 4:
      r6 ??= true, s4 ??= true;
      break;
    case 3:
      r6 ??= true !== s4, s4 ??= !r6;
      break;
    default:
      r6 ??= false, s4 ??= false;
  }
  return i5 ??= f.WGS84, { ...t4, hasM: s4, hasZ: r6, paths: e3, spatialReference: i5 };
}
var y3 = c8 = class extends c2 {
  constructor(t4) {
    super(m5(t4)), this.curvePaths = void 0, this.paths = [], this.type = "polyline";
  }
  get cache() {
    return this.commitProperty("curvePaths"), this.commitProperty("hasM"), this.commitProperty("hasZ"), this.commitProperty("paths"), this.commitProperty("spatialReference"), {};
  }
  writeCurvePaths(t4, s4) {
    s4.curvePaths = a(t4);
  }
  get extent() {
    const t4 = h6(this), { spatialReference: e3 } = this;
    return t4 ? new z({ ...t4, spatialReference: e3 }) : null;
  }
  writePaths(t4, s4) {
    s4.paths = a(this.paths);
  }
  addPath(t4) {
    if (!t4) return;
    const e3 = this.paths, s4 = e3.length;
    if (u5(t4)) {
      const r6 = [];
      for (let e4 = 0, s5 = t4.length; e4 < s5; e4++) r6[e4] = t4[e4].toArray();
      e3[s4] = r6;
    } else e3[s4] = t4.slice();
    return this.notifyChange("paths"), this;
  }
  clone() {
    const t4 = new c8();
    return t4.spatialReference = this.spatialReference, t4.paths = a(this.paths), t4.curvePaths = a(this.curvePaths), t4.hasZ = this.hasZ, t4.hasM = this.hasM, t4;
  }
  getPoint(t4, e3) {
    if (!this._validateInputs(t4, e3)) return null;
    const s4 = this.paths[t4][e3], r6 = this.hasZ, i5 = this.hasM;
    return r6 && !i5 ? new _(s4[0], s4[1], s4[2], void 0, this.spatialReference) : i5 && !r6 ? new _(s4[0], s4[1], void 0, s4[2], this.spatialReference) : r6 && i5 ? new _(s4[0], s4[1], s4[2], s4[3], this.spatialReference) : new _(s4[0], s4[1], this.spatialReference);
  }
  insertPoint(t4, e3, s4) {
    return this._validateInputs(t4, e3, true) ? (h2(this, s4), Array.isArray(s4) || (s4 = s4.toArray()), this.paths[t4].splice(e3, 0, s4), this.notifyChange("paths"), this) : this;
  }
  removePath(t4) {
    if (!this._validateInputs(t4, null)) return null;
    const e3 = this.paths.splice(t4, 1)[0], s4 = this.spatialReference, r6 = e3.map(((t5) => new _(t5, s4)));
    return this.notifyChange("paths"), r6;
  }
  removePoint(t4, e3) {
    if (!this._validateInputs(t4, e3)) return null;
    const s4 = new _(this.paths[t4].splice(e3, 1)[0], this.spatialReference);
    return this.notifyChange("paths"), s4;
  }
  setPoint(t4, e3, s4) {
    return this._validateInputs(t4, e3) ? (h2(this, s4), Array.isArray(s4) || (s4 = s4.toArray()), this.paths[t4][e3] = s4, this.notifyChange("paths"), this) : this;
  }
  _validateInputs(t4, e3, s4 = false) {
    if (null == t4 || t4 < 0 || t4 >= this.paths.length) return false;
    if (null != e3) {
      const r6 = this.paths[t4];
      if (s4 && (e3 < 0 || e3 > r6.length)) return false;
      if (!s4 && (e3 < 0 || e3 >= r6.length)) return false;
    }
    return true;
  }
  toJSON(t4) {
    return this.write({}, t4);
  }
};
r([m({ readOnly: true })], y3.prototype, "cache", null), r([m({ json: { write: true, origins: { "portal-item": { write: false }, "web-map": { write: false }, "web-scene": { write: false } } } })], y3.prototype, "curvePaths", void 0), r([r2("curvePaths")], y3.prototype, "writeCurvePaths", null), r([m({ readOnly: true })], y3.prototype, "extent", null), r([m({ type: [[[Number]]], json: { write: { isRequired: true } } })], y3.prototype, "paths", void 0), r([r2("paths")], y3.prototype, "writePaths", null), y3 = c8 = r([a2("esri.geometry.Polyline")], y3), y3.prototype.toJSON.isDefaultToJSON = true;

export {
  m2 as m,
  t2 as t,
  n,
  r4 as r,
  l3 as l,
  o2 as o,
  i4 as i,
  I,
  f4 as f,
  a4 as a,
  c5 as c,
  f3 as f2,
  m3 as m2,
  x,
  l4 as l2,
  v,
  P,
  y3 as y
};
//# sourceMappingURL=chunk-RMRI4NYS.js.map
