import {
  l
} from "./chunk-4AWS66T2.js";
import {
  K,
  Ke,
  ae,
  q,
  te
} from "./chunk-ONCJ5DYL.js";
import "./chunk-4I7FX2CT.js";
import "./chunk-MX6BY66A.js";
import "./chunk-SMDDQAST.js";
import {
  R,
  i
} from "./chunk-4R7TSTKL.js";
import {
  h
} from "./chunk-UO2UKPG5.js";
import "./chunk-EMULKSUV.js";
import {
  a,
  r
} from "./chunk-AY3JR4QM.js";
import "./chunk-HH4Q2NN5.js";
import "./chunk-3CFYBBSV.js";
import "./chunk-SCMB64VM.js";
import {
  e,
  o
} from "./chunk-FOPBVVXE.js";
import "./chunk-RMRI4NYS.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-BLBN3L5Q.js";
import "./chunk-CBXZL53X.js";
import "./chunk-SDIBXPSJ.js";
import "./chunk-LPCUYJ2B.js";
import "./chunk-SMO33YG7.js";
import "./chunk-LCBAL6ER.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-ZB6KRLRI.js";
import "./chunk-67AKDROO.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-2AYGXVZI.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-APMQAZ5Z.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-NJZD7WM5.js";
import "./chunk-CL7VLXUR.js";
import "./chunk-FCX4ZA3Z.js";
import "./chunk-2ZPU5IZX.js";
import "./chunk-S62CSPIH.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-TTJIKWMC.js";
import "./chunk-CMEG2CKL.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import "./chunk-N626Y23H.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-G26ADAPQ.js";

// node_modules/@arcgis/core/arcade/functions/featuresetstats.js
async function l2(n, t, e2, a2) {
  if (1 === e2.length) {
    if (o(e2[0])) return l(n, e2[0], q(e2[1], -1));
    if (te(e2[0])) return l(n, e2[0].toArray(), q(e2[1], -1));
  } else if (2 === e2.length) {
    if (o(e2[0])) return l(n, e2[0], q(e2[1], -1));
    if (te(e2[0])) return l(n, e2[0].toArray(), q(e2[1], -1));
    if (K(e2[0])) {
      const r2 = await e2[0].load(), i2 = await y(R.create(e2[1], { fieldsIndex: r2.getFieldsIndex(), timeZone: r2.dateFieldsTimeZoneDefaultUTC }), a2, t);
      return g(t, await e2[0].calculateStatistic(n, i2, q(e2[2], 1e3), t.abortSignal));
    }
  } else if (3 === e2.length && K(e2[0])) {
    const r2 = await e2[0].load(), i2 = await y(R.create(e2[1], { fieldsIndex: r2.getFieldsIndex(), timeZone: r2.dateFieldsTimeZoneDefaultUTC }), a2, t);
    return g(t, await e2[0].calculateStatistic(n, i2, q(e2[2], 1e3), t.abortSignal));
  }
  return l(n, e2, -1);
}
function g(t, e2) {
  return e2 instanceof i ? h.fromReaderAsTimeStampOffset(e2.toStorageFormat()) : e2 instanceof Date ? h.dateJSAndZoneToArcadeDate(e2, Ke(t)) : e2;
}
async function y(n, t, e2) {
  const a2 = n.getVariables();
  if (a2.length > 0) {
    const r2 = {};
    for (const n2 of a2) r2[n2] = t.evaluateIdentifier(e2, { name: n2 });
    n.parameters = r2;
  }
  return n;
}
function A(n) {
  "async" === n.mode && (n.functions.stdev = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("stdev", t, r2, n)));
  }, n.functions.variance = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("variance", t, r2, n)));
  }, n.functions.average = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("mean", t, r2, n)));
  }, n.functions.mean = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("mean", t, r2, n)));
  }, n.functions.sum = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("sum", t, r2, n)));
  }, n.functions.min = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("min", t, r2, n)));
  }, n.functions.max = function(t, e2) {
    return n.standardFunctionAsync(t, e2, ((e3, a2, r2) => l2("max", t, r2, n)));
  }, n.functions.count = function(o2, s) {
    return n.standardFunctionAsync(o2, s, (async (n2, c, u) => {
      if (ae(u, 1, 1, o2, s), K(u[0])) return u[0].count(n2.abortSignal);
      if (o(u[0]) || e(u[0])) return u[0].length;
      if (te(u[0])) return u[0].length();
      throw new a(o2, r.InvalidParameter, s);
    }));
  });
}
export {
  A as registerFunctions
};
//# sourceMappingURL=featuresetstats-NRZ53PNE.js.map
