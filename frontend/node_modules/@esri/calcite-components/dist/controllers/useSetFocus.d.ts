import { makeGenericController } from '@arcgis/lumina/controllers';
import { FocusableElement, SetFocusable } from '../utils/dom';
import { InteractiveComponent } from '../utils/interactive';
type FocusStrategy = "focusable" | "tabbable";
type FocusConfig = {
    target: FocusableElement;
    includeContainer?: boolean;
    strategy?: FocusStrategy;
};
export interface UseSetFocus {
    (getFocusTarget: () => FocusableElement | FocusConfig | undefined, options?: FocusOptions): Promise<void>;
}
type SetFocusComponent = SetFocusable & Partial<Pick<InteractiveComponent, "disabled">>;
/**
 * A controller for centralized setFocus behavior.
 */
export declare const useSetFocus: <T extends SetFocusComponent>() => ReturnType<typeof makeGenericController<UseSetFocus, T>>;
export {};
