/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.3.2 */
import{a as N}from"./DZ2Q4CVO.js";import{a as O}from"./XFVIIGHX.js";import{D as S,E as x,G as o,Q as G,g as X,h as z,i as g}from"./5IGT3AAH.js";function I(t,s,n){let i=s[0]-t[0],c=n[0]-s[0],l=s[1]-t[1],h=n[1]-s[1],r=l/(i||c<0&&0),a=h/(c||i<0&&0),e=(r*c+a*i)/(i+c);return(Math.sign(r)+Math.sign(a))*Math.min(Math.abs(r),Math.abs(a),.5*Math.abs(e))||0}function Y(t,s,n){let i=s[0]-t[0],c=s[1]-t[1];return i?(3*c/i-n)/2:n}function Z(t,s,n,i,c){let[l,h]=t,[r,a]=s,e=(r-l)/3,$=c([l+e,h+e*n]).join(","),d=c([r-e,a-e*i]).join(","),m=c([r,a]).join(",");return`C ${$} ${d} ${m}`}function A({width:t,height:s,min:n,max:i}){let c=i[0]-n[0],l=i[1]-n[1];return h=>{let r=(h[0]-n[0])/c*t,a=s-(h[1]-n[1])/l*s;return[r,a]}}function B(t){let[s,n]=t[0],i=[s,n],c=[s,n];return t.reduce(({min:l,max:h},[r,a])=>({min:[Math.min(l[0],r),Math.min(l[1],a)],max:[Math.max(h[0],r),Math.max(h[1],a)]}),{min:i,max:c})}function E({data:t,min:s,max:n,t:i}){if(t.length===0)return"";let[c,l]=i(t[0]),[h,r]=i(s),[a]=i(n),e,$,d,m=t.reduce((b,k,p)=>{if($=t[p-2],d=t[p-1],p>1){let u=I($,d,k),M=e===void 0?Y($,d,u):e,w=Z($,d,M,u,i);return e=u,`${b} ${w}`}return b},`M ${h},${r} L ${h},${l} L ${c},${l}`),L=t[t.length-1],v=Z(d,L,e,Y(d,L,e),i);return`${m} ${v} L ${a},${r} Z`}var R=X`:host{--calcite-internal-color-focus: var( --calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)) )}:host{display:block;block-size:100%}.svg{fill:currentColor;stroke:transparent;margin:0;display:block;block-size:100%;inline-size:100%;padding:0}.svg .graph-path--highlight{fill:var(--calcite-graph-highlight-fill-color, var(--calcite-color-brand));opacity:.5}:host([hidden]){display:none}[hidden]{display:none}`,y={svg:"svg",graphPath:"graph-path",graphPathHighlight:"graph-path--highlight"},C="calcite-graph",f={host:t=>`${C}-${t}`,linearGradient:t=>`linear-gradient-${C}-${t}`,mask:(t,s)=>`${C}-${t}${s}`},P=class extends S{constructor(){super(...arguments),this.graphId=O(),this.resizeObserver=N("resize",()=>this.requestUpdate()),this.data=[]}static{this.properties={colorStops:[0,{},{attribute:!1}],data:[0,{},{attribute:!1}],highlightMax:[9,{},{type:Number}],highlightMin:[9,{},{type:Number}],max:[11,{},{reflect:!0,type:Number}],min:[11,{},{reflect:!0,type:Number}]}}static{this.styles=R}connectedCallback(){super.connectedCallback(),this.resizeObserver?.observe(this.el)}disconnectedCallback(){super.disconnectedCallback(),this.resizeObserver?.disconnect()}render(){let{data:s,colorStops:n,el:i,highlightMax:c,highlightMin:l,min:h,max:r}=this,a=this.graphId,{clientHeight:e,clientWidth:$}=i;if(!s||s.length===0)return z`<svg aria-hidden=true class=${x(y.svg)} height=${e??o} preserveAspectRatio=none viewBox=${`0 0 ${$} ${e}`} width=${$??o}></svg>`;let{min:d,max:m}=B(s),L=d,v=m;(h<d[0]||h>d[0])&&(L=[h,0]),(r>m[0]||r<m[0])&&(v=[r,m[1]]);let b=A({min:L,max:v,width:$,height:e}),[k]=b([l,v[1]]),[p]=b([c,v[1]]),u=E({data:s,min:d,max:m,t:b}),M=n?`url(#${f.linearGradient(a)})`:void 0;return z`<svg aria-hidden=true class=${x(y.svg)} height=${e??o} preserveAspectRatio=none viewBox=${`0 0 ${$} ${e}`} width=${$??o}>${n?g`<defs><linearGradient id=${f.linearGradient(a)??o} x1=0 x2=1 y1=0 y2=0>${n.map(({offset:w,color:j,opacity:H})=>g`<stop offset=${`${w*100}%`} stop-color=${j??o} stop-opacity=${H??o} />`)}</linearGradient></defs>`:null}${l!==void 0?[g`<mask height=100% id=${f.mask(a,1)??o} width=100% x=0% y=0%><path d=${`
            M 0,0
            L ${k-1},0
            L ${k-1},${e}
            L 0,${e}
            Z
          `} fill=white /></mask>`,g`<mask height=100% id=${f.mask(a,2)??o} width=100% x=0% y=0%><path d=${`
            M ${k+1},0
            L ${p-1},0
            L ${p-1},${e}
            L ${k+1}, ${e}
            Z
          `} fill=white /></mask>`,g`<mask height=100% id=${f.mask(a,3)??o} width=100% x=0% y=0%><path d=${`
                M ${p+1},0
                L ${$},0
                L ${$},${e}
                L ${p+1}, ${e}
                Z
              `} fill=white /></mask>`,g`<path class=${x(y.graphPath)} d=${u??o} fill=${M??o} mask=${`url(#${f.mask(a,1)})`} />`,g`<path class=${x(y.graphPathHighlight)} d=${u??o} fill=${M??o} mask=${`url(#${f.mask(a,2)})`} />`,g`<path class=${x(y.graphPath)} d=${u??o} fill=${M??o} mask=${`url(#${f.mask(a,3)})`} />`]:g`<path class=${x(y.graphPath)} d=${u??o} fill=${M??o} />`}</svg>`}};G("calcite-graph",P);export{P as Graph};
